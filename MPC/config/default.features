// $Id:$
// The global features file contains the default feature settings.
// By default, if a feature isn't listed here then it is enabled.
// If it is listed, then the value assigned to the feature is interpreted
// as a boolean value.  You really shouldn't have to edit this file except
// to change the defaults.  If you want to override these values you can do
// one of two things.
//
// 1) Create a default.features in this directory with the features you
//    want enabled or disabled.
// 2) Create a feature file anywhere you like with the features you want and
//    use the -feature_file option to specify where it is located.
//
// Feature definitions from this file are always overwritten by -features
// command option of mwc.pl.
//
// This file is somewhat akin to the platform_macros.GNU file in that build
// settings can be set here.
dcps_isocpp_example = 1
dcps_sacpp_example = 1

no_tao = 0
src_co = 0
cross_compile = 0
ospl_64_bit = 0
// Architectures
ospl_arch_x86 = 0
ospl_arch_ppc = 0
ospl_arch_arm = 0
ospl_arch_PPC32 = 0
ospl_arch_PPC604 = 0
ospl_arch_PPC750 = 0
ospl_arch_PPCE500 = 0
ospl_arch_E500v2 = 0
ospl_arch_E500mc = 0
ospl_arch_PPCe5500 = 0
ospl_arch_armhf = 0
ospl_arch_PPC2020 = 0
ospl_arch_MIPS32R2sf = 0
ospl_arch_PENTIUM = 0
ospl_arch_PENTIUM3 = 0
ospl_arch_PENTIUM4 = 0
ospl_arch_Atom = 0
ospl_arch_SIMPENTIUM = 0
ospl_arch_PPC85XXe500v2 = 0
ospl_arch_armv6l = 0
ospl_arch_armv7l = 0
ospl_arch_armv7l_marvell = 0
ospl_arch_armv7a_vfp_neon = 0
ospl_arch_armv7at2_vfp_neon = 0
// OS
ospl_os_darwin = 0
ospl_os_int = 0
ospl_os_AIX = 0
ospl_os_denx = 0
ospl_os_linux = 0
ospl_os_solaris = 0
ospl_os_win = 0
ospl_os_wince = 0
ospl_os_pikeos = 0
ospl_os_vxworks = 0
ospl_os_qnx = 0
ospl_os_yocto = 0

// Hosts
ospl_os_host_win = 0
ospl_os_host_linux = 0
ospl_os_host_solaris = 0

// Compilers (and other variations)
ospl_compiler_studio = 0
ospl_compiler_gcc = 0

// VxWorks 6.5, 6.6, and 6.7 have libs under target/usr/lib, so set to 1
ospl_vxworks_libs_in_target_usr_lib=0

ospl_smp=0
ospl_kernelspace=0
ospl_sharedlib_rtp=0
split_kernel=0

// if set don't link the service libs into the examples.
ospl_examples_dynamic=0

// OS versions ...
ospl_os_ver_5_5 = 0
ospl_os_ver_6_5 = 0
ospl_os_ver_6_6 = 0
ospl_os_ver_6_7 = 0
ospl_os_ver_6_8 = 0
ospl_os_ver_6_9 = 0
ospl_os_ver_6 = 0
ospl_os_ver_7 = 0

// Targets
E500v2_linux = 0
E500mc_linux = 0
mpc8308_glibc_small_WRlinux4_gcc = 0
common_pc_glibc_small_WRlinux4_gcc = 0
cortexa9t_neon_WRlinux5_gcc = 0
cortexa9t_yocto = 0
armv7l_linux = 0
armv7a_vfp_neon_linux = 0
armv7at2_vfp_neon_WRlinux7_gcc = 0
intel_atom_WRlinux5_gcc = 0
x86_WRlinux7_gcc = 0
x86_64_WRlinux7_gcc = 0
x86_64_WRlinux8_gcc = 0
mpc8313e_linux = 0
PPC440_linux = 0
PPCE600_lynxos5 = 0
PPC7448_lynxos5 = 0
ppc_freescale = 0
x86_64_linux = 0
x86_linux = 0
x86_linux_perc = 0
x86_elinos4_2_perc = 0
x86_elinos4_2 = 0
x86_elinos5 = 0
arm_elinos5 = 0
x86_64_elinos6_1 = 0
// Because of the OS headers silliness we need a feature for every set in ospli for src_co builds only
os_headers_linux = 0
os_headers_win32 = 0
os_headers_solaris9 = 0
os_headers_solaris10 = 0
os_headers_darwin10 = 0
os_headers_pikeos3 = 0
os_headers_vxworks5_5 = 0

// CORBA (C++ & Java) & C# off by default
ospl_dcpsccpp = 0
ospl_dcpscj = 0
ospl_dcpssacs = 0

// Enable these by default.
acexml        = 1
ace_svcconf   = 1
ace_token     = 1

// By default we disable these.
ace_for_tao   = 0
ace_idl_dependencies = 0
cross_compile = 0
ssl           = 0
qos           = 0
rapi          = 0
repo          = 0
minimum_corba = 0
java          = 0
zlib          = 0
zzip          = 0
bzip2         = 0
lzo1          = 0
lzo2          = 0
ipv6          = 0
mfc           = 0
rpc           = 0
sctp 	      = 0
boost         = 0
dummy_label   = 0
wince         = 0
uses_wchar    = 0  // i.e. unicode
gen_ostream   = 0
ziparchive    = 0
negotiate_codesets  = 0
notify_monitor_control = 0
versioned_namespace = 0
vcl           = 0
stl           = 0
xsc           = 0
tao_idl_fe_gen = 0
ace_svcconf_gen = 0
xerces        = 0
xerces2       = 0
xerces3       = 0
ofccm         = 0
ndds          = 0
nddsmonitor   = 0
mcpp          = 0
wireshark     = 0
old_stdstream = 0
exclude_inet  = 0
inet_ssl      = 0
coredx        = 0
dds4ccm_opendds = 0
dds4ccm_ndds = 0
dds4ccm_splice = 0
dds4ccm_coredx = 0
openmp = 0
rlm = 0
isocpp2_cxx11 = 0

// Features for various GUI libraries

// Some of features are switched on because they are also controlled
// by higher level features eg. gl is 1 because it is necessary for fl,
// but if someone turns on fl, we may assume gl is available. This way makefile
// generation is simplified. Moreover all internal ACE features like ace_qtreactor
// and tao_qtresource are also turn on, because we want to build every component
// related with if qt is provided. It is proposed to not remove
// switched on features from global.features just because features are available
// by default. This file is also a kind of ACE capabilities documentation, hence
// it is better to enumerate here all features recognized by ACE.

// 1 - wxWindows (wxWidgets) libraries are available
wxWindows     = 0
// 1 - Motif (Lestif) libraries are available
motif         = 0
// 1 - Athena widgets libraries are available
athena        = 0
// 1 - X11 libraries are available
x11           = 1
// 1 - X Toolkit libraries are available
xt            = 0
// 1 - Tk libraries are available
tk            = 0
// 1 - Fast Light toolkit libraries are available (assume lowercase h in header files)
fl            = 0
// 1 - Qt3 libraries are available
qt            = 0
qt3           = 0
// 1 - Qt4 core libraries are available
qt4           = 1
// 1 - Fox libraries are available
fox           = 0
// 1 - OpenGL libraries are available
gl            = 1

// Features for ACE support for various GUI libraries
// Use QtReactor
ace_qtreactor    = 1
// Use XtReactor
ace_xtreactor    = 1
// Use TkReactor
ace_tkreactor    = 1
// Use FlReactor
ace_flreactor    = 1
// Use FoxReactor
ace_foxreactor   = 1

// Features for TAO support for various GUI libraries
// Use QtResources for TAO
tao_qtresource    = 1
// Use XtResources for TAO
tao_xtresource    = 1
// Use TkResources for TAO
tao_tkresource    = 1
// Use FlResources for TAO
tao_flresource    = 1
// Use FoxResources for TAO
tao_foxresource    = 1

//Use the ZIP_Wrapper feature for when using the ZIP wrapper classes
ZIP_Wrapper = 0

// Feature for CORBA subsets
corba_e_compact = 0
corba_e_micro   = 0

// Footprint feature
optimize_collocated_invocations = 1

// Option to disable iiop
tao_no_iiop = 0

// Option to enable the linking of the TAO_CodecFactory library
// whenever TAO is linked in
link_codecfactory = 0

// Feature for LwCCM
ccm_lw = 1
// Feature for CCM for disabling events.
ccm_noevent = 0
// Feature for direct collocation
ccm_direct_collocation = 0

valuetype_out_indirection=1

// win_idlpp_no_quotes is used to remove the quotes on the idlpp run command.. needed in some cases.
win_idlpp_no_quotes = 0

// some older versions of make don't support patsubst, this was a short term workaround for vx 5.5
win_use_subst = 0
