// -*- MPC -*-
// $Id:$
// NOTE: Every feature specified in this file *must* be defined in
// MPC/config/default.features and defaulted (normally) to 0 i.e. 'off'
//
// See MPC/templates/user_makedll.mpt & submods/MPC_ROOT/templates/makedll.mpt
// for available 'make' compilers/platforms

// Arch features
feature(ospl_64_bit) {
    specific (make) {
        build64bit = 1
    }
    specific(prop:windows) {
        platforms = x64
        default_platform = x64
    }
}

feature(!ospl_64_bit) {
    specific (make) {
        build64bit =
    }
    specific(prop:windows) {
        platforms = Win32
        default_platform = Win32
    }
}

// Compiler sections - make defaults to gcc
feature(ospl_compiler_studio) {
    specific (make) {
        compilers = SunCC
    }
}

feature(ospl_compiler_gcc) {
    specific (make) {
        compilers = gcc
    }
}

// OS section - the default depends on the compiler
// Features in this section are ospl_os_<target OS w/out version>
feature(ospl_os_linux) {
    specific (make) {
        // compilers = gcc & platforms = linux are already defaults
        extracppflags += -D_REENTRANT -D_POSIX_C_SOURCE=200112L -D_XOPEN_SOURCE=500 -Wall -Wno-unused-function
    }
}

feature(ospl_os_AIX) {
    specific (make) {
        platforms = aix_53
        compilers = xlC_r
    }
}

feature(ospl_os_darwin) {
    specific (make) {
        platforms = macosx
    }
}

feature (ospl_os_denx) {
    specific (make) {
        compilers = ppc_74xx-gcc
        extracppflags += -D_XOPEN_SOURCE=500
    }
}

feature (x86_elinos4_2) {
    specific (make) {
        compilers = x86_486-gcc
        platforms = x86_elinos4_2
    }
}

feature (x86_elinos4_2_perc) {
    specific (make) {
        compilers = x86_486-gcc
        platforms = x86_elinos4_2
    }
}

feature (x86_64_elinos6_1) {
    specific (make) {
        compilers = x86_64-unknown-linux-gnu-gcc
        platforms = x86_64_elinos6_1
    }
}

feature (x86_elinos5) {
    specific (make) {
        compilers = i486-pc-linux-gnu-gcc
    }
}

feature (arm_elinos5) {
    specific (make) {
        compilers = armel-unknown-linux-gnueabi-gcc
    }
}

feature(ospl_os_int) {
    specific (make) {
        platforms = integrity
        compilers = ghsppc
        cputype = x86
    }
}

feature(ospl_os_vxworks, ospl_os_ver_5_5) {
    specific (make) {
        compilers = tornado22
    }
}

feature (ospl_os_solaris) {
    specific (make) {
        ospl_os_solaris = 1
        platforms = solaris
        build64bit =
    }
}

feature (ospl_os_wince) {
    specific (prop:windows) {
        // The below switches the projects to /MT
        // It's what we've done previously but
        // I don't think it's right
        // @todo See OSPL-1280
        //need_staticflags = 1
        ignore_default_library_names = msvcrt
    }
}

feature (ospl_os_wince, ospl_os_ver_6) {
    specific (prop:windows) {
        platforms = "WinCE-GS3Target (ARMV4I)"
        default_platform = "WinCE-GS3Target (ARMV4I)"
    }
}

feature (ospl_os_wince, ospl_os_ver_7) {
    specific (prop:windows) {
        platforms = "ConnectCore i.MX51 Wi-i.MX51 (ARMv4I)"
        default_platform = "ConnectCore i.MX51 Wi-i.MX51 (ARMv4I)"
    }
}

feature (ospl_os_pikeos, ospl_arch_x86) {
    specific (make) {
        compilers = x86_586-pikeos-gcc
    }
}

feature (ospl_os_pikeos, ospl_arch_ppc) {
    specific (make) {
        compilers = ppc_oea-pikeos-gcc
    }
}

feature (ospl_os_linux, ospl_arch_PPCe5500) {
    specific (make) {
        compilers = PPCe5500-linux-gnu-gcc-5
    }
}

feature (ospl_os_linux, ospl_arch_armhf) {
    specific (make) {
        compilers = arm-linux-gnueabihf-gcc-5
    }
}

feature (ospl_os_qnx, ospl_arch_x86) {
    specific (make) {
        compilers = x86-qcc
    }
}

feature (ospl_os_qnx, ospl_arch_arm) {
    specific (make) {
        compilers = arm-qcc
    }
}

// Specific OS versions. NOTE: DO NOT USE DOTS !!!! They are swapped for _

feature (ospl_os_vxworks, ospl_os_ver_6_5) {
    specific (wb30) {
        platform_name = vxworks-6.5
    }
}

feature (ospl_os_vxworks, ospl_os_ver_6_6) {
    specific (wb30) {
        platform_name = vxworks-6.6
    }
}

feature (ospl_os_vxworks, ospl_os_ver_6_7) {
    specific (wb30) {
        platform_name = vxworks-6.7
    }
}

feature (ospl_os_vxworks, ospl_os_ver_6_8) {
    specific (wb30) {
        platform_name = vxworks-6.8
    }
}

feature (ospl_os_vxworks, ospl_os_ver_6_9) {
    specific (wb30) {
        platform_name = vxworks-6.9
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_SIMPENTIUM) {
    specific (wb30) {
        buildspecs = SIMPENTIUMgnu_RTP
        default_buildspec = SIMPENTIUMgnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_SIMPENTIUM, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/simpentium/SIMPENTIUM/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_SIMPENTIUM, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/simpentium/SIMPENTIUM/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC32) {
    specific (wb30) {
        buildspecs = PPC32gnu_RTP
        default_buildspec = PPC32gnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC32, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC32, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC604) {
    specific (wb30) {
        buildspecs = PPC32gnu_RTP
        default_buildspec = PPC32gnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC604, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC604, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC2020) {
    specific (wb30) {
        buildspecs = PPC32e500v2gnu_RTP
        default_buildspec = PPC32e500v2gnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC2020, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/e500v2common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PPC2020, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/e500v2common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_MIPS32R2sf) {
    specific (wb30) {
        buildspecs = MIPSI32R2sfgnu_RTP
        default_buildspec = MIPSI32R2sfgnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_MIPS32R2sf, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp  -non-static -L '$(WIND_BASE)/target/lib/usr/lib/mips/MIPSI32R2/sfcommon'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_MIPS32R2sf, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/mips/MIPSI32R2/sfcommon'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM) {
    specific (wb30) {
        buildspecs = PENTIUMgnu_RTP
        default_buildspec = PENTIUMgnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM3) {
    specific (wb30) {
        buildspecs = PENTIUM3gnu_RTP
        default_buildspec = PENTIUM3gnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM4) {
    specific (wb30) {
        buildspecs = PENTIUM4gnu_RTP
        default_buildspec = PENTIUM4gnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_Atom) {
    specific (wb30) {
        buildspecs = ATOMgnu_RTP
        default_buildspec = ATOMgnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_E500v2) {
    specific (wb30) {
        buildspecs =  PPC32e500v2gnu_RTP
        default_buildspec =  PPC32e500v2gnu_RTP
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_E500v2, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/e500v2common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_E500v2, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/ppc/PPC32/e500v2common'
    }
}

feature (ospl_os_vxworks, ospl_kernelspace, !ospl_smp, ospl_arch_PENTIUM) {
    specific (wb30) {
        platform = VxWorks
        buildspecs = PENTIUMgnu
        default_buildspec = PENTIUMgnu
        exe_ext    = .out
        vsb_config_file = $(VSB_DIR)/h/config/vsbConfig.h
        vsb_dir = $(WIND_BASE)/target/lib
        wrprj_macros += VSB_CONFIG_FILE VSB_DIR
        platform_asflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_cxxflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_ccflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        common_defines += USE_CLOCK_GETTIME USE_NANOSLEEP
    }
}

feature ( ospl_os_vxworks, ospl_kernelspace, ospl_os_ver_6_9 ) {
    specific (wb30) {
    common_defines += IP_PORT_VXWORKS=69
  }
}


feature (ospl_os_vxworks, ospl_kernelspace, !ospl_smp, ospl_arch_PENTIUM4) {
    specific (wb30) {
        platform = VxWorks
        buildspecs = PENTIUM4gnu
        default_buildspec = PENTIUM4gnu
        exe_ext    = .out
        vsb_config_file = $(VSB_DIR)/h/config/vsbConfig.h
        vsb_dir = $(WIND_BASE)/target/lib
        wrprj_macros += VSB_CONFIG_FILE VSB_DIR
        platform_asflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_cxxflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_ccflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        common_defines += USE_CLOCK_GETTIME USE_NANOSLEEP
    }
}

feature (ospl_os_vxworks, ospl_kernelspace, ospl_smp, ospl_arch_PENTIUM4) {
    specific (wb30) {
        platform = VxWorks
        buildspecs = PENTIUM4gnu_SMP
        default_buildspec = PENTIUM4gnu_SMP
        exe_ext    = .out
        vsb_config_file = $(VSB_DIR)/h/config/vsbConfig.h
        vsb_dir = $(WIND_BASE)/target/lib_smp
        wrprj_macros += VSB_CONFIG_FILE VSB_DIR
        platform_asflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_cxxflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_ccflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        common_defines += USE_CLOCK_GETTIME USE_NANOSLEEP _WRS_VX_SMP _WRS_CONFIG_SMP
    }
}

feature (ospl_os_vxworks, ospl_kernelspace, !ospl_smp, ospl_arch_PPC85XXe500v2 ) {
    specific (wb30) {
        platform = VxWorks
        buildspecs = PPC85XXe500v2gnu
        default_buildspec = PPC85XXe500v2gnu
        exe_ext    = .out
        vsb_config_file = $(VSB_DIR)/h/config/vsbConfig.h
        vsb_dir = $(WIND_BASE)/target/lib
        wrprj_macros += VSB_CONFIG_FILE VSB_DIR
        platform_asflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_cxxflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        platform_ccflags += -D_VSB_CONFIG_FILE=<%equote%>$(VSB_CONFIG_FILE)<%equote%>
        common_defines += USE_CLOCK_GETTIME USE_NANOSLEEP
    }
}


feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM4, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/pentium/PENTIUM4/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM4, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/pentium/PENTIUM4/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_Atom, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/pentium/ATOM/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_Atom, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/pentium/ATOM/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM, !ospl_vxworks_libs_in_target_usr_lib, ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -non-static -L '$(WIND_BASE)/target/lib/usr/lib/pentium/PENTIUM/common'
    }
}

feature (ospl_os_vxworks, !ospl_kernelspace, ospl_arch_PENTIUM, !ospl_vxworks_libs_in_target_usr_lib, !ospl_sharedlib_rtp) {
    specific (wb30) {
        linker_flags = $(CC_ARCH_SPEC) -mrtp -L '$(WIND_BASE)/target/lib/usr/lib/pentium/PENTIUM/common'
    }
}


// Specific targets. NOTE: DO NOT USE DOTS !!!! They are swapped for _
feature(E500v2_linux) {
    specific (make) {
        compilers = powerpc-none-linux-gnuspe-gcc
    }
}

feature(E500mc_linux, ppc_freescale) {
    specific (make) {
        compilers = powerpc-fsl-linux-gcc
    }
}

feature (E500mc_linux, !ppc_freescale) {
    specific (make) {
        compilers = powerpc-poky-linux-gcc
    }
}

feature (ospl_os_vxworks, ospl_arch_PPC604, ospl_os_ver_5_5 ) {
    specific (make) {
       platforms = PPC604-vxworks55-c-only
    }
}

feature (ospl_os_vxworks, ospl_arch_PPCE500, ospl_os_ver_5_5 ) {
    specific (make) {
       platforms = PPCE500-vxworks55-c-only
    }
}

feature (ospl_os_vxworks, ospl_arch_x86, ospl_os_ver_5_5 ) {
    specific (make) {
       platforms = x86-vxworks55-c-only
    }
}

feature(PPC440_linux) {
    specific (make) {
        compilers = powerpc-linux-gnu-gcc
    }
}

feature(mpc8313e_linux) {
    specific (make) {
        compilers = powerpc-e300c3-linux-gcc
    }
}

feature(PPC7448_lynxos5, src_co) {
    specific (make) {
        compilers = powerpc-lynxos-gnu-gcc
        platforms = ppc_lynxos5
    }
}

feature(PPCE600_lynxos5, src_co) {
    specific (make) {
        compilers = powerpc-lynxos-gnu-gcc
        platforms = ppc_lynxos5
    }
}

feature(PPC7448_lynxos5, !src_co) {
    specific (make) {
        compilers = powerpc-lynxos-gnu-gcc-export
        platforms = ppc_lynxos5
    }
}

feature(PPCE600_lynxos5, !src_co) {
    specific (make) {
        compilers = powerpc-lynxos-gnu-gcc-export
        platforms = ppc_lynxos5
    }
}

feature(x86_linux) {
    specific (make) {
        compilerflags += -m32
        linkflags += -m32
    }
}

feature(x86_linux_perc) {
    specific (make) {
        compilerflags += -m32
        linkflags += -m32
    }
}

feature(common_pc_glibc_small_WRlinux4_gcc) {
    specific (make) {
        compilers = i586-wrs-linux-gnu-i686-glibc_small-gcc
    }
}

feature(mpc8308_glibc_small_WRlinux4_gcc) {
    specific (make) {
        compilers = powerpc-wrs-linux-gnu-ppc_e300c2-glibc_small-gcc
    }
}

feature(ospl_arch_armv6l, cross_compile) {
    specific (make) {
        compilers = armv6l_linux_cross
        buildspecs = armv6l
    }
}

feature(ospl_arch_armv6l, !cross_compile) {
    specific (make) {
        compilers = gcc
    }
}

feature(ospl_arch_armv7l, cross_compile) {
    specific (make) {
        compilers = arm-linux-gnueabihf-gcc
    }
}

feature(ospl_arch_armv7l_marvell, cross_compile) {
    specific (make) {
        compilers = arm-marvell-linux-gnueabihf-gcc
    }
}

feature(armv7a_vfp_neon_linux) {
    specific (make) {
        compilers = arm7a-vfp-neon-linux-gcc
    }
}

feature(armv7at2_vfp_neon_WRlinux7_gcc) {
    specific (make) {
        compilers = armv7at2-vfp-neon-WRlinux7-gcc
    }
}

feature(cortexa9t_neon_WRlinux5_gcc) {
    specific (make) {
        compilers = cortexa9t-neon-wrswrap-linux-gnueabi-gcc
    }
}
feature(cortexa9t_yocto) {
    specific (make) {
        compilers = arm-poky-linux-gnueabi-gcc
    }
}
feature(intel_atom_WRlinux5_gcc) {
    specific (make) {
        compilers = atom-wrswrap-linux-gnu-gcc
    }
}
feature(x86_WRlinux7_gcc) {
    specific (make) {
        compilers = i586-wrs-linux-gnu-gcc
    }
}
feature(x86_64_WRlinux7_gcc) {
    specific (make) {
        compilers = x86_64-windriver-linux-gcc
    }
}
feature(x86_64_WRlinux8_gcc) {
    specific (make) {
        compilers = x86-64-wrs-linux-gnu-gcc
    }
}
