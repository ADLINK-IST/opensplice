#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
<%marker(top)%>
<%if(multiple(configurations) || multiple(platforms))%>
<%foreach(configurations)%>
<%if(forfirst)%>
<%if(multiple(platforms))%>
<%foreach(platforms)%>
<%if(forfirst)%>
CFG = <%platform%> <%configuration%>
<%endif%>
<%endfor%>
<%else%>
CFG = <%configuration%>
<%endif%>

<%endif%>
<%endfor%>
<%endif%>
<%foreach(compilers)%>
<%foreach(platforms)%>
<%foreach(configurations)%>
<%if(multiple(platforms))%>
ifeq ($(CFG), <%platform%> <%configuration%>)
<%else%>
<%if(multiple(configurations))%>
ifeq ($(CFG), <%configuration%>)
<%endif%>
<%endif%>
JAVAC         = $(SPLICE_JAVAC)
JAR           = <%ar("jar")%>
<%if(nm)%>
NM            = <%nm%>
<%endif%>
<%if(cxxint)%>
CXXINT        = <%cxxint%>
<%endif%>
<%if(cputype)%>
CPUTYPE       = <%cputype%>
<%endif%>
<%if(cpu)%>
CPU           = <%cpu%>
<%endif%>
<%if(cflags)%>
CFLAGS        = <%cflags%>
<%endif%>
<%if(ccflags)%>
CCFLAGS       = <%ccflags%>
<%endif%>
JAVACFLAGS    = <%if(visibility && visopt)%><%visopt%> <%endif%>$(GENFLAGS)<%if(compile_flags)%> <%compile_flags%><%endif%><%if(profile)%> <%profopt%><%endif%><%if(coverage)%> <%covopt%><%endif%><%if(cpu)%> -DCPU=$(CPU)<%endif%><%if(tempincopt)%> <%tempincopt%>$(TEMPINCDIR)<%endif%><%if(compilerflags)%> <%compilerflags%><%endif%><%if(build64bit && compilerflags64)%> <%compilerflags64%><%endif%><%if(pch_source && pchsupport)%><%foreach(pch_defines)%> -D<%pch_define%><%endfor%><%endif%><%if(extracppflags)%><%foreach(extracppflags)%><%if(!starts_with(extracppflag, -D) || !contains(language, java))%> <%extracppflag%><%endif%><%endfor%><%endif%><%if(!contains(language, java) && macros)%><%foreach(macros)%> -D<%macro%><%endfor%><%endif%>
CLASSEXT      = <%obj_ext%>
CLASSDIR      = <%class_dir("classes/")%>
OUTPUT_OPTION = <%if(output_option)%><%output_option%><%else%>-d $(CLASSDIR)<%endif%>
COMPILE.java  = $(JAVAC) $(JAVACFLAGS) -cp $(JAVACCPATH) <%compile_option("-c")%>
<%if(tempinc)%>
TEMPINCDIR    = <%tempinc%><%if(tempincopt)%><%slash%><%project_name%><%endif%>
<%endif%>
JAVACCPATH    = "$(SPLICE_EXTRA_CP)<%pathsep%><%if(libs)%><%foreach(libs)%><%lib%><%pathsep%><%endfor%><%endif%><%if(libpaths)%>$(CLASSDIR)<%pathsep%><%foreach(libpaths)%><%if(targetoutdir)%><%libpath%><%slash%><%targetoutdir%><%pathsep%><%endif%><%libpath%><%pathsep%><%endfor%>"<%endif%><%if(linkflags)%> <%linkflags%><%endif%><%if(profile)%> <%profopt%><%endif%><%if(coverage)%> <%covopt%><%endif%><%if(build64bit && linkflags64)%> <%linkflags64%><%endif%>
MAKEFILE      = <%project_file%>
DEPENDENCIES  = <%if(supports_include)%>.depend.<%endif%>$(MAKEFILE)
LTARGETDIR    = <%libout%><%if(!compares(libout, .))%><%output_dir_ext%><%endif%><%slash%><%targetoutdir%>
CAT           = <%type("cat")%>
MV            = <%move("mv -f")%>
RM            = <%delete("rm -rf")%>
CP            = <%copy("cp -p")%>
NUL           = <%devnull("/dev/null")%>
MKDIR         = <%makedir("mkdir -p")%>
TESTDIRSTART  = <%testdirstart("test -d")%>
TESTDIREND    = <%testdirend("||")%>
TOUCH         = <%touch("touch")%>
GENFLAGS      = <%if(!contains(configuration, Release) || optimize)%> <%genflags%><%endif%>
CLASSES       = <%foreach(source_files)%> $(CLASSDIR)<%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(source_file)%><%else%><%noextension(source_file)%><%endif%>$(CLASSEXT)<%endfor%><%if(rc)%><%foreach(resource_files)%> $(CLASSDIR)<%targetoutdir%><%obj_dir%><%resource_file%>$(RESEXT)<%endfor%><%endif%>
JARCLASSES    = <%foreach(source_files)%> <%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(source_file)%><%else%><%noextension(source_file)%><%endif%>$(CLASSEXT)<%endfor%><%if(rc)%><%foreach(resource_files)%> <%targetoutdir%><%obj_dir%><%resource_file%>$(RESEXT)<%endfor%><%endif%>
<%if(lib_ext)%>
JAREXT        = <%lib_ext%>
<%if(staticname)%>
JARFILE       = $(LTARGETDIR)$(LIBPREFIX)<%staticname%>$(LIBSUFFIX)$(JAREXT)
MANIFEST      = <%staticname%>.manifest
<%else%>
<%if(exename)%>
MAINCLASS     = <%exename%>
JARFILE       = $(LTARGETDIR)$(LIBPREFIX)<%project_name%>$(LIBSUFFIX)$(JAREXT)
MANIFEST      = <%project_name%>.manifest
<%endif%>
<%endif%>
<%if(build64bit && arflags64)%>
JARFLAGS      = <%if(extraarflags)%><%extraarflags%> <%endif%><%arflags64%><%if(staticname)%>m<%else%><%if(exename)%>m<%endif%><%endif%>
<%else%>
<%if(arflags)%>
JARFLAGS      = <%if(extraarflags)%><%extraarflags%> <%endif%><%arflags%><%if(staticname)%>m<%else%><%if(exename)%>m<%endif%><%endif%>
<%endif%>
<%endif%>
<%set(do_a_jar, true)%>
<%endif%>
<%if(dll_ext && sharedname)%>
SOEXT         = <%dll_ext%>
SHTARGETDIR   = <%if(dllout)%><%dllout%><%if(!compares(dllout, .))%><%output_dir_ext%><%endif%><%else%><%libout%><%if(!compares(libout, .))%><%output_dir_ext%><%endif%><%endif%><%slash%><%targetoutdir%>
<%if(version && versupport)%>
SHLIB_BASE    = $(LIBPREFIX)<%sharedname%>$(LIBSUFFIX)$(SOEXT)
<%endif%>
SHLIB         = $(SHTARGETDIR)$(LIBPREFIX)<%sharedname%>$(LIBSUFFIX)$(SOEXT)
<%if(shflags)%>
SHFLAGS       = <%shflags%>
<%endif%>
<%endif%>
SRC           =<%if(pch_source && pchsupport)%> <%pch_source%><%endif%> <%source_files%>
<%if(multiple(configurations) || multiple(platforms))%>
endif
<%endif%>
<%endfor%>
<%if(supports_include && make_include)%>

include <%make_include%>
<%endif%>
<%marker(macros)%>

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

<%if(dll_ext && sharedname)%>
all:<%if(prebuild)%> __prebuild__<%endif%><%if(version && versupport)%> $(SHLIB).<%version%><%endif%> $(SHLIB)<%if(postbuild)%> __postbuild__<%endif%>

<%if(version && versupport)%>
$(SHLIB):
	cd $(SHTARGETDIR) && ln -s $(SHLIB_BASE).<%version%> $(SHLIB_BASE)

<%endif%>
$(SHLIB)<%if(version && versupport)%>.<%version%><%endif%>: <%if(tempinc)%>$(TEMPINCDIR) <%endif%>$(CLASSES)
	@$(TESTDIRSTART) "$(SHTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(SHTARGETDIR)"
<%if(prelink)%>
	<%eval(prelink)%>
<%endif%>
<%if(dmclink)%>
	link /impl <%if(pch_source && pchsupport)%><%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(pch_source)%><%else%><%noextension(pch_source)%><%endif%>$(CLASSEXT)+<%endif%><%foreach(source_files)%><%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(source_file)%><%else%><%noextension(source_file)%><%endif%>$(CLASSEXT)<%fornotlast("+")%><%endfor%>,$@,<%ldlibs%><%if(rc)%><%foreach(resource_files)%><%forfirst(",,")%><%targetoutdir%><%obj_dir%><%resource_file%>$(RESEXT)<%fornotlast("+")%><%endfor%><%endif%>
<%else%>
	$(LINK.cc) $(SHFLAGS) $(CLASSES) $(LDLIBS) $(OUTPUT_OPTION)
<%endif%>

<%else%>
<%if(do_a_jar)%>
all:<%if(prebuild)%> __prebuild__<%endif%> $(JARFILE)<%if(postbuild)%> __postbuild__<%endif%>

<%endif%>
<%endif%>
<%if(do_a_jar)%>
$(JARFILE): <%if(tempinc)%>$(TEMPINCDIR) <%endif%>$(CLASSES) $(CLASSDIR)$(MANIFEST)
	@$(TESTDIRSTART) "$(LTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(LTARGETDIR)"
	cd $(CLASSDIR) <%and%> $(JAR) $(JARFLAGS) <%libgenopt%>$(JARFILE) $(MANIFEST) $(JARCLASSES)<%if(tempinc)%> `find $(TEMPINCDIR) -name \*.class\*`<%endif%> <%if(extra_ar_objs)%><%extra_ar_objs%><%endif%>
	$(MV) $(CLASSDIR)<%slash%><%libgenopt%>$(JARFILE) .
<%if(ranlib)%>
	ranlib $(JARFILE)
<%endif%>

$(CLASSDIR)$(MANIFEST):
	echo Class-Path: <%if(libs)%><%foreach(libs)%><%lib%> <%endfor%><%endif%><%if(libpaths)%><%foreach(libpaths)%><%libpath%> <%endfor%><%endif%><%gt%> $(CLASSDIR)$(MANIFEST)
<%if(exename)%>
	echo Main-Class: $(MAINCLASS) <%gt%><%gt%> $(CLASSDIR)$(MANIFEST)
<%endif%>

<%endif%>
<%if(custom_types)%>
<%if(gnumake)%>
SPACE           = $(should_be_unset) $(should_be_unset)
<%endif%>
GENERATED_DIRTY =<%foreach(custom_types)%><%foreach(custom_type->input_files)%><%if(custom_type->input_file->output_files)%><%foreach(custom_type->input_file->output_files)%> <%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%><%slash%><%basename(custom_type->input_file->output_file)%><%else%><%if(ends_with(custom_type->input_file->output_file, \*\.java))%><%dirname(custom_type->input_file->output_file)%><%else%><%custom_type->input_file->output_file%><%endif%><%endif%><%endfor%><%endif%><%endfor%><%endfor%>

<%if(!source_files)%>
all:<%if(prebuild)%> __prebuild__<%endif%> $(GENERATED_DIRTY)<%if(postbuild)%> __postbuild__<%endif%>

<%endif%>
<%foreach(custom_types)%>
<%if(expanded_variable_assignment && custom_type->libpath)%>
DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):<%custom_type->libpath%>
LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):<%custom_type->libpath%>
SHLIB_PATH        := $(SHLIB_PATH):<%custom_type->libpath%>
LIBPATH           := $(LIBPATH):<%custom_type->libpath%>
PATH              := $(PATH):<%custom_type->libpath%>

<%endif%>
<%foreach(custom_type->input_files)%>
<%if(custom_type->input_file->output_files)%>
<%if(notparallel && multiple(custom_type->input_file->output_files))%>
.NOTPARALLEL:
<%endif%>
<%foreach(custom_type->input_file->output_files)%><%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%><%slash%><%basename(custom_type->input_file->output_file)%><%else%><%if(ends_with(custom_type->input_file->output_file, \*\.java))%><%dirname(custom_type->input_file->output_file)%><%else%><%custom_type->input_file->output_file%><%endif%><%endif%><%fornotlast(" ")%><%endfor%>: <%custom_type->input_file%><%if(custom_type->input_file->dependencies)%><%foreach(custom_type->input_file->dependencies)%><%if(gnumake)%><%if(contains(custom_type->input_file->dependencie, \$))%> $(subst $(SPACE),\$(SPACE),<%custom_type->input_file->dependencie%>)<%else%> <%scope(enter, escape, \\s)%><%custom_type->input_file->dependencie%><%scope(leave)%><%endif%><%else%><%if(!contains(custom_type->input_file->dependencie, \$))%> <%scope(enter, escape, \\s)%><%custom_type->input_file->dependencie%><%scope(leave)%><%endif%><%endif%><%endfor%><%endif%><%if(flag_overrides(custom_type->input_file, dependent))%><%foreach(dep, flag_overrides(custom_type->input_file, dependent))%><%if(gnumake)%><%if(contains(dep, \$))%> $(subst $(SPACE),\$(SPACE),<%dep%>)<%else%> <%scope(enter, escape, \\s)%><%dep%><%scope(leave)%><%endif%><%else%><%if(!contains(dep, \$))%> <%scope(enter, escape, \\s)%><%dep%><%scope(leave)%><%endif%><%endif%><%endfor%><%else%><%if(custom_type->dependent)%><%foreach(custom_type->dependent)%><%if(gnumake)%><%if(contains(custom_type->dependent, \$))%> $(subst $(SPACE),\$(SPACE),<%custom_type->dependent%>)<%else%> <%scope(enter, escape, \\s)%><%custom_type->dependent%><%scope(leave)%><%endif%><%else%><%if(!contains(custom_type->dependent, \$))%> <%scope(enter, escape, \\s)%><%custom_type->dependent%><%scope(leave)%><%endif%><%endif%><%endfor%><%endif%><%endif%><%if(!need_staticflags)%><%if(flag_overrides(custom_type->input_file, dependent_libs))%><%foreach(dep_lib, flag_overrides(custom_type->input_file, dependent_libs))%><%if(gnumake)%><%if(contains(dep_lib, \$))%> $(subst $(SPACE),\$(SPACE),<%dirname(dep_lib)%>/$(LIBPREFIX)<%basename(dep_lib)%>$(LIBSUFFIX)$(SOEXT))<%else%> <%scope(enter, escape, \\s)%><%dirname(dep_lib)%>/$(LIBPREFIX)<%basename(dep_lib)%>$(LIBSUFFIX)$(SOEXT)<%scope(leave)%><%endif%><%else%><%if(!contains(dep_lib, \$))%> <%scope(enter, escape, \\s)%><%dirname(dep_lib)%>/$(LIBPREFIX)<%basename(dep_lib)%>$(LIBSUFFIX)$(SOEXT)<%scope(leave)%><%endif%><%endif%><%endfor%><%else%><%if(custom_type->dependent_libs)%><%foreach(custom_type->dependent_libs)%><%if(gnumake)%><%if(contains(custom_type->dependent_libs, \$))%> $(subst $(SPACE),\$(SPACE),<%dirname(custom_type->dependent_lib)%>/$(LIBPREFIX)<%basename(custom_type->dependent_lib)%>$(LIBSUFFIX)$(SOEXT))<%else%> <%scope(enter, escape, \\s)%><%dirname(custom_type->dependent_lib)%>/$(LIBPREFIX)<%basename(custom_type->dependent_lib)%>$(LIBSUFFIX)$(SOEXT)<%scope(leave)%><%endif%><%else%><%if(!contains(custom_type->dependent_libs, \$))%> <%scope(enter, escape, \\s)%><%dirname(custom_type->dependent_lib)%>/$(LIBPREFIX)<%basename(custom_type->dependent_lib)%>$(LIBSUFFIX)$(SOEXT)<%scope(leave)%><%endif%><%endif%><%endfor%><%endif%><%endif%><%endif%>
<%if(flag_overrides(custom_type->input_file, gendir))%>
	@$(TESTDIRSTART) "<%flag_overrides(custom_type->input_file, gendir)%>" $(TESTDIREND) $(MKDIR) "<%flag_overrides(custom_type->input_file, gendir)%>"
<%endif%>
	<%if(flag_overrides(custom_type->input_file, command))%><%flag_overrides(custom_type->input_file, command)%><%else%><%custom_type->command%><%endif%> <%if(flag_overrides(custom_type->input_file, commandflags))%><%flag_overrides(custom_type->input_file, commandflags)%><%else%><%custom_type->commandflags%><%endif%> <%if(custom_type->output_option)%><%custom_type->input_file%> <%custom_type->output_option%> "$@"<%else%><%custom_type->input_file%><%endif%>
<%if(flag_overrides(custom_type->input_file, postcommand))%>
<%foreach(custom_type->input_file)%>
	<%flag_overrides(custom_type->input_file, postcommand)%>
<%endfor%>
<%else%>
<%if(custom_type->postcommand)%>
<%foreach(custom_type->input_file)%>
	<%custom_type->postcommand%>
<%endfor%>
<%endif%>
<%endif%>
<%if(pchsupport && pch_header)%>
<%if(custom_type->pch_postrule)%>
<%foreach(custom_type->input_file->source_output_files)%>
	@echo <%echo_outer_quote("'")%>#include "<%pch_header%>"<%echo_outer_quote("'")%> > temp.$$$$ && $(CAT) <%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%><%slash%><%basename(custom_type->input_file->source_output_file)%><%else%><%custom_type->input_file->source_output_file%><%endif%> >> temp.$$$$ && $(MV) temp.$$$$ <%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%><%slash%><%basename(custom_type->input_file->source_output_file)%><%else%><%custom_type->input_file->source_output_file%><%endif%>
<%endfor%>
<%endif%>
<%endif%>

<%endif%>
<%endfor%>
<%endfor%>
.PRECIOUS: $(GENERATED_DIRTY)
<%if(source_files)%>
$(CLASSES): $(GENERATED_DIRTY)
<%endif%>

<%endif%>
generated:<%if(prebuild)%> __prebuild__<%endif%> $(GENERATED_DIRTY)
	@-:

<%if(tempinc)%>
$(TEMPINCDIR):
	@-$(TESTDIRSTART) "$(TEMPINCDIR)" $(TESTDIREND) $(MKDIR) "$(TEMPINCDIR)" 2> $(NUL)

<%endif%>
<%if(pch_source && pchsupport)%>
<%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(pch_source)%><%else%><%noextension(pch_source)%><%endif%>$(CLASSEXT): <%pch_source%>
<%if(targetoutdir || obj_dir)%>
	@$(TESTDIRSTART) "<%targetoutdir%><%obj_dir%>" $(TESTDIREND) $(MKDIR) "<%targetoutdir%><%obj_dir%>"
<%endif%>
	<%if(ends_with(pch_source, \.c))%>$(COMPILE.java)<%else%>$(COMPILE.java)<%endif%> <%if(pchcreate)%><%pchcreate%><%targetoutdir%><%obj_dir%><%pch_header%><%pchext%> <%endif%>$(EXPORTFLAGS)<%if(!pchnobj)%> $(OUTPUT_OPTION)<%endif%> <%pch_source%>
<%if(pchnobj)%>
	@$(CP) <%targetoutdir%><%obj_dir%><%pch_header%><%pchext%> <%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(pch_source)%><%else%><%noextension(pch_source)%><%endif%>$(CLASSEXT)
<%endif%>

<%endif%>
<%foreach(source_files)%>
$(CLASSDIR)<%targetoutdir%><%obj_dir%><%if(obj_dir_flat)%><%basenoextension(source_file)%><%else%><%noextension(source_file)%><%endif%>$(CLASSEXT): <%if(ends_with(source_file, \*\.java))%><%dirname(source_file)%><%else%><%source_file%><%endif%>
	@$(TESTDIRSTART) "$(CLASSDIR)<%targetoutdir%><%obj_dir%>" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)<%targetoutdir%><%obj_dir%>"
	$(COMPILE.java) <%if(flag_overrides(source_file, buildflags))%><%flag_overrides(source_file, buildflags)%> <%endif%><%if(pchuse && pch_source && pchsupport)%><%pchuse%><%pch_header%><%pchext%> <%if(pchstop)%><%pchstop%><%pch_header%><%endif%><%endif%>$(EXPORTFLAGS) $(OUTPUT_OPTION) <%source_file%>
<%if(source_file->postcommand)%>
	<%source_file->postcommand%>
<%endif%>

<%endfor%>
<%if(resource_files)%>
<%if(rc)%>
<%foreach(resource_files)%>
<%targetoutdir%><%obj_dir%><%resource_file%>$(RESEXT):
<%if(targetoutdir || obj_dir)%>
	@$(TESTDIRSTART) "<%targetoutdir%><%obj_dir%>" $(TESTDIREND) $(MKDIR) "<%targetoutdir%><%obj_dir%>"
<%endif%>
	<%rc%><%foreach(includes)%> -I<%include%><%endfor%> <%resource_file%> <%targetoutdir%><%obj_dir%><%resource_file%>$(RESEXT)

<%endfor%>
<%endif%>
<%endif%>
clean:
	-$(RM) $(CLASSES)
<%if(pch_source && pchsupport)%>
	-$(RM) <%targetoutdir%><%obj_dir%><%pch_header%><%pchext%>
<%endif%>
<%if(clean)%>
	-$(RM) <%clean%><%if(sharedname)%><%foreach(dir, clean)%> $(SHTARGETDIR)<%dir%><%endfor%><%endif%><%if(do_a_jar || sharedname)%><%foreach(dir, clean)%> $(LTARGETDIR)<%dir%><%endfor%><%endif%><%if(exename)%><%foreach(dir, clean)%> $(BTARGETDIR)<%dir%><%endfor%><%endif%>
<%endif%>

realclean: clean
	-$(RM) <%if(exename)%>$(BIN)<%else%><%if(dll_ext && sharedname && version && versupport)%>$(SHLIB).<%version%> <%endif%>$(SHLIB) $(JARFILE)<%endif%>
<%if(custom_types)%>
	-$(RM) $(GENERATED_DIRTY)
<%endif%>
<%if(do_a_jar)%>
	-$(RM) $(CLASSDIR)$(MANIFEST)
<%endif%>
<%if(obj_dir)%>
	-$(RM) <%targetoutdir%><%obj_dir%>
<%endif%>
<%if(postclean)%>
	-<%eval(postclean)%>
<%endif%>

check-syntax:
	$(COMPILE.java) $(EXPORTFLAGS)<%if(checkopt)%> <%checkopt%><%endif%> $(CHK_SOURCES)

<%if(prebuild)%>
__prebuild__:
	@<%eval(prebuild)%>

<%endif%>
<%if(postbuild)%>
__postbuild__:
	@<%eval(postbuild)%>

<%endif%>
<%marker(local)%>
<%if(supports_include)%>
#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@$(TOUCH) $(DEPENDENCIES)

depend:
<%if(source_files || pch_source)%>
	-<%if(targetoutdir || obj_dir)%>VDIR=<%targetoutdir%><%obj_dir%> <%endif%><%depgen("$(MPC_ROOT)/depgen.pl")%> <%depgen_flags%> $(JAVACFLAGS) $(JAVAJAVACFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)
<%else%>
	@-:
<%endif%>

<%if(forlast)%>
include $(DEPENDENCIES)
<%else%>
# DO NOT DELETE THIS LINE
<%endif%>
<%endif%>
<%endfor%>
<%endfor%>
<%marker(bottom)%>
