if [ "$OSPL_HOME" = "" ];then
echo "*** Please source release.com to set OpenSplice environment variables";
echo "*** ERROR OpenSplice environment variables NOT SET"
exit;
fi
echo "=== OSPL_HOME is "${OSPL_HOME}
echo "=== OSPL_URI is "${OSPL_URI}

$VG_OSPL_START ospl stop
sleep 2

$VG_OSPL_START ospl start
$VG_START_SLEEP

echo "=== Launching Lifecycle "

echo "=== (step 1)" 
sh ./startPublisher.sh  false dispose > pubResult_1.txt&
sh ./startSubscriber.sh > subResult_1.txt
$VG_OSPL_START ospl stop
sleep 2

$VG_OSPL_START ospl start
$VG_START_SLEEP

echo "=== (step 2)" 
sh ./startPublisher.sh  false unregister > pubResult_2.txt&
sh ./startSubscriber.sh "./subResult_2.txt" 
$VG_OSPL_START ospl stop
sleep 2

$VG_OSPL_START ospl start
$VG_START_SLEEP

echo "=== (step 3)" 
sh ./startPublisher.sh  false stoppub > pubResult_3.txt&
sh ./startSubscriber.sh "./subResult_3.txt" 

#step 1
echo "=== Checking Lifecycle Subscriber results"
step_1_1=`grep "sample_state:NOT_READ_SAMPLE_STATE-view_state:NEW_VIEW_STATE-instance_state:ALIVE_INSTANCE_STATE" subResult_1.txt |wc -l`;
step_1_2=`grep "sample_state:READ_SAMPLE_STATE-view_state:NOT_NEW_VIEW_STATE-instance_state:ALIVE_INSTANCE_STATE" subResult_1.txt |wc -l`;
step_1_3=`grep "sample_state:READ_SAMPLE_STATE-view_state:NOT_NEW_VIEW_STATE-instance_state:NOT_ALIVE_DISPOSED_INSTANCE_STATE" subResult_1.txt |wc -l`;
echo step_1_1=$step_1_1;
echo step_1_2=$step_1_2;
echo step_1_3=$step_1_3;
#step 2
step_2_1=`grep "sample_state:NOT_READ_SAMPLE_STATE-view_state:NEW_VIEW_STATE-instance_state:ALIVE_INSTANCE_STATE" subResult_2.txt |wc -l`;
step_2_2=`grep "sample_state:READ_SAMPLE_STATE-view_state:NOT_NEW_VIEW_STATE-instance_state:ALIVE_INSTANCE_STATE" subResult_2.txt |wc -l`;
# ***** strange to get this step : after unregistering the instance, view_state becomes NEW_VIEW_STATE ********
step_2_3=`grep "sample_state:READ_SAMPLE_STATE-view_state:NEW_VIEW_STATE-instance_state:NOT_ALIVE_NO_WRITERS_INSTANCE_STATE" subResult_2.txt |wc -l`;
#
step_2_4=`grep "sample_state:READ_SAMPLE_STATE-view_state:NOT_NEW_VIEW_STATE-instance_state:NOT_ALIVE_NO_WRITERS_INSTANCE_STATE" subResult_2.txt |wc -l`;
echo step_2_1=$step_2_1;
echo step_2_2=$step_2_2;
echo step_2_3=$step_2_3;
echo step_2_4=$step_2_4;
#step 3
step_3_1=`grep "sample_state:NOT_READ_SAMPLE_STATE-view_state:NEW_VIEW_STATE-instance_state:ALIVE_INSTANCE_STATE" subResult_3.txt |wc -l`;
step_3_2=`grep "sample_state:READ_SAMPLE_STATE-view_state:NOT_NEW_VIEW_STATE-instance_state:ALIVE_INSTANCE_STATE" subResult_3.txt |wc -l`;
step_3_3=`grep "sample_state:READ_SAMPLE_STATE-view_state:NOT_NEW_VIEW_STATE-instance_state:NOT_ALIVE_NO_WRITERS_INSTANCE_STATE" subResult_3.txt |wc -l`;
echo step_3_1=$step_3_1;
echo step_3_2=$step_3_2;
echo step_3_3=$step_3_3;

if [ $step_1_1 -eq 0 ] || [ $step_1_2 -eq 0 ] || [ $step_1_3 -eq 0 ] ;then
   echo NOK 
   echo "*** ERROR : example Lifecycle failed (step 1)";
   cat subResult_1.txt;
elif  [ $step_2_1 -eq 0 ] || [ $step_2_2 -eq 0 ] || [ $step_2_4 -eq 0 ];then
   echo NOK 
   echo "*** ERROR : example Lifecycle failed (step 2)";
   cat subResult_2.txt;
elif  [ $step_3_1 -eq 0 ] || [ $step_3_2 -eq 0 ] || [ $step_3_3 -eq 0 ] ;then
   echo NOK 
   echo "*** ERROR : example Lifecycle failed (step 3)";
   cat subResult_3.txt;
else
   echo OK
fi

$VG_OSPL_START ospl stop
sleep 2
