@INCLUDE_PATH = $(OSPL_HOME)/etc/
@INCLUDE = doxygen_isocpp_common.cfg
# Doxyfile 1.7.5.1

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project
#
# All text after a hash (#) is considered a comment and will be ignored
# The format is:
#       TAG = value [value, ...]
# For lists items can also be appended using:
#       TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (" ")

#---------------------------------------------------------------------------
# Project related configuration options
#---------------------------------------------------------------------------

# The PROJECT_NAME tag is a single word (or sequence of words) that should
# identify the project. Note that if you do not use Doxywizard you need
# to put quotes around the project name if it contains spaces.

PROJECT_NAME           = "OpenSplice ISO C++ DCPS"

# Using the PROJECT_BRIEF tag one can provide an optional one line description
# for a project that appears at the top of each page and should give viewer
# a quick idea about the purpose of the project. Keep the description short.

PROJECT_BRIEF          = "ISO C++ OpenSplice Data Distribution Service Data-Centric Publish-Subscribe API"

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
# base path where the generated documentation will be put.
# If a relative path is entered, it will be relative to the location
# where doxygen was started. If left blank the current directory will be used.

OUTPUT_DIRECTORY       = $(OSPL_HOME)/ospl_docs/docs/isocpp

# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag
# can be used to strip a user-defined part of the path. Stripping is
# only done if one of the specified strings matches the left-hand part of
# the path. The tag can be used to show relative paths in the file list.
# If left blank the directory from which doxygen is run is used as the
# path to strip.

STRIP_FROM_PATH        = include/dcps/C++/isocpp/doxy \
                         include/dcps/C++/isocpp \
                         include/streams/isocpp \
                         custom_lib \
                         ./

#---------------------------------------------------------------------------
# configuration options related to the input files
#---------------------------------------------------------------------------

# The INPUT tag can be used to specify the files and/or directories that contain
# documented source files. You may enter file names like "myfile.cpp" or
# directories like "/usr/src/myproject". Separate the files or directories
# with spaces.

INPUT                  = include/dcps/C++/isocpp/doxy \
                         include/dcps/C++/isocpp/org \
                         include/streams/isocpp/org \
                         custom_lib/isocpp/README.md \
                         demos/iShapes/README.md \
                         include/dcps/docs \

# If the value of the INPUT tag contains directories, you can use the
# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
# certain files from those directories. Note that the wildcards are matched
# against the file with absolute path, so to exclude all test directories
# for example use the pattern */test/*

EXCLUDE_PATTERNS       = */include/dcps/C++/isocpp/spec/*/detail/* \
                         */include/dcps/C++/isocpp/spec/dds/core/xtypes/* \
                         */spec/dds/core/xtypes/* \
                         */examples/*/isocpp2/* \
                         */examples/*/cpp/* \
                         */examples/*/c/* \
                         */examples/utilities/* \
                         */examples/streams/* \
                         */include/dcps/C++/isocpp/org/opensplice/* \
                         */include/streams/isocpp/spec/*/detail/* \
                         */include/streams/isocpp/org/opensplice/*

# The GENERATE_TODOLIST tag can be used to enable (YES) or
# disable (NO) the todo list. This list is created by putting \todo
# commands in the documentation.

GENERATE_TODOLIST      = NO

# The GENERATE_TESTLIST tag can be used to enable (YES) or
# disable (NO) the test list. This list is created by putting \test
# commands in the documentation.

GENERATE_TESTLIST      = NO

# The GENERATE_BUGLIST tag can be used to enable (YES) or
# disable (NO) the bug list. This list is created by putting \bug
# commands in the documentation.

GENERATE_BUGLIST       = NO

# The INTERNAL_DOCS tag determines if documentation
# that is typed after a \internal command is included. If the tag is set
# to NO (the default) then the documentation will be excluded.
# Set it to YES to include the internal documentation.

INTERNAL_DOCS          = NO
