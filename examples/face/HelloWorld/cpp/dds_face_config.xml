<?xml version="1.0" encoding="UTF-8"?>

<!--
###################################################################################################

Summary of the Vortex FACE configuration XML.

    ┌─────────────────────┬──────────────────────────────────────┐
    │ <connections_list>  │ Container that will hold the         │
    │ Mandatory           │ configuration for the connections.   │
    └─┬───────────────────┴──────────────────────────────────────┘
      │
      │  ┌─────────────────┬───────────────────────────────────────┐
      └─▶│ <connection>    │ This will contain the configuration   │
         │ Mandatory       │ of a specific connection. It is       │
         │                 │ identified by <name>.                 │
         └─┬───────────────┴───────────────────────────────────────┘
           │
           │  ┌──────────────────────┬──────────────────────────────────────────────────────┐
           ├─▶│ <name>               │ Connection identification.                           │
           │  │ Mandatory            │ It has to be unique within the configuration file.   │
           │  │                      │                                                      │
           │  │                      │ DDS uses partitions when communicating. This name    │
           │  │                      │ is used as partition id as well.                     │
           │  │                      │ It can be overruled when the DDS Publisher QoS       │
           │  │                      │ or DDS Subscriber QoS specifically state a different │
           │  │                      │ partition (see QosProvider, <qos><subscriber_qos_id> │
           │  │                      │ and <qos><publisher_qos_id>).                        │
           │  │                      │                                                      │
           │  │                      │ For this example, the partition is in the QoS        │
           │  │                      │ overruled to be able to setup a connection by using  │
           │  │                      │ only one configuration file (and as example how to   │
           │  │                      │ include QoS settings in the configuration).          │
           │  │                      │ Often, a publisher application will use a different  │
           │  │                      │ configuration file than the related subscriber       │
           │  │                      │ application. Then you can use the same name in the   │
           │  │                      │ different configuration files, meaning that you have │
           │  │                      │ the same DDS partition automatically.                │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <type>               │ Connection type.                                     │
           │  │ Mandatory            │ This is mapped on the FACE specification             │
           │  │                      │ CONNECTION_TYPE enumeration.                         │
           │  │                      │ Only "DDS" is supported.                             │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <direction>          │ Connection direction.                                │
           │  │ Mandatory            │ This is mapped on the FACE specification             │
           │  │                      │ CONNECTION_DIRECTION_TYPE enumeration.               │
           │  │                      │ Only "SOURCE" and "DESTINATION" are supported.       │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <platform_view_guid> │ The Platform View GUID is a reference to a specific  │
           │  │ Mandatory            │ Data Model Platform View defining the structure of   │
           │  │                      │ the message.                                         │
           │  │                      │                                                      │
           │  │                      │ This will not be used by the Vortex FACE.            │
           │  │                      │ It will only be returned during FACE Callback and    │
           │  │                      │ Receive_Message() calls as Message Type GUID.        │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <refresh_period>     │ This indicates the length of time a message is       │
           │  │ Mandatory            │ valid. It is only used for FACE when SAMPLING.       │
           │  │                      │                                                      │
           │  │                      │ Vortex FACE only supports DDS, which means that the  │
           │  │                      │ refresh period is ignored.                           │
           │  │                      │ It is only returned in the connection status when    │
           │  │                      │ Get_Connection_Parameters() is called.               │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <domain_id>          │ DDS domain ID.                                       │
           │  │ Optional             │ This domain id has to be the same as the one         │
           │  │                      │ provided in the ospl configuration xml.              │
           │  │                      │                                                      │
           │  │                      │ When no domain id is provided, then the id           │
           │  │                      │ present in the ospl configuration will be used to    │
           │  │                      │ setup the connection.                                │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <topic_name>         │ DDS Topic name.                                      │
           │  │ Mandatory            │ This is used by DDS as 'connection identification'   │
           │  │                      │ part.                                                │
           │  │                      │ There can be multiple 'DDS Connections' of the       │
           │  │                      │ same type (<type_name>) as long as they have         │
           │  │                      │ different topic names (<topic_name>).                │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           ├─▶│ <type_name>          │ Data Type name.                                      │
           │  │ Mandatory            │ This is used to determine the data type.             │
           │  │                      │ It has to be the completely scoped class name        │
           │  │                      │ that represents the type.                            │
           │  │                      │                                                      │
           │  │                      │ This is used by DDS as 'connection identification'   │
           │  │                      │ part.                                                │
           │  │                      │ There can be multiple 'DDS Connections' of the       │
           │  │                      │ same type (<type_name>) as long as they have         │
           │  │                      │ different topic names (<topic_name>).                │
           │  ├──────────────────────┼──────────────────────────────────────────────────────┤
           └─▶│ <qos>                │ Container to hold QosProvider information.           │
              │ Optional             │                                                      │
              │                      │ DDS supports various Quality Of Service variables.   │
              │                      │ The QosProvider is used to supply this feature       │
              │                      │ to the FACE API.                                     │
              │                      │                                                      │
              │                      │ See Vortex OSPL IsoCpp2 or Java5 API documentation   │
              │                      │ for more QosProvider information.                    │
              └─┬────────────────────┴──────────────────────────────────────────────────────┘
                │
                │  ┌────────────────────────────┬───────────────────────────────────────────────┐
                ├─▶│ <uri>                      │ Location and name of the QosProvider profiles │
                │  │ Mandatory                  │ XML file.                                     │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                ├─▶│ <profile>                  │ The name, within the QosProvider XML file, of │
                │  │ Mandatory                  │ the profile to use.                           │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                ├─▶│ <domainparticipant_qos_id> │ The name, within the QosProvider XML file, of │
                │  │ Optional                   │ the DDS DomainParticipant QoS profile to use. │
                │  │                            │                                               │
                │  │                            │ When not provided, the default QoS within the │
                │  │                            │ profile will be used.                         │
                │  │                            │ When not provided in the profile either, then │
                │  │                            │ the DDS default will be used.                 │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                ├─▶│ <topic_qos_id>             │ The name, within the QosProvider XML file, of │
                │  │ Optional                   │ the DDS Topic QoS profile to use.             │
                │  │                            │                                               │
                │  │                            │ When not provided, the default QoS within the │
                │  │                            │ profile will be used.                         │
                │  │                            │ When not provided in the profile either, then │
                │  │                            │ the DDS default will be used.                 │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                ├─▶│ <publisher_qos_id>         │ The name, within the QosProvider XML file, of │
                │  │ Optional                   │ the DDS Publisher QoS profile to use.         │
                │  │                            │                                               │
                │  │                            │ When not provided, the default QoS within the │
                │  │                            │ profile will be used.                         │
                │  │                            │ When not provided in the profile either, then │
                │  │                            │ the DDS default will be used.                 │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                ├─▶│ <datawriter_qos_id>        │ The name, within the QosProvider XML file, of │
                │  │ Optional                   │ the DDS DataWriter QoS profile to use.        │
                │  │                            │                                               │
                │  │                            │ When not provided, the default QoS within the │
                │  │                            │ profile will be used.                         │
                │  │                            │ When not provided in the profile either, then │
                │  │                            │ the DDS default will be used.                 │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                ├─▶│ <subscriber_qos_id>        │ The name, within the QosProvider XML file, of │
                │  │ Optional                   │ the DDS Subscriber QoS profile to use.        │
                │  │                            │                                               │
                │  │                            │ When not provided, the default QoS within the │
                │  │                            │ profile will be used.                         │
                │  │                            │ When not provided in the profile either, then │
                │  │                            │ the DDS default will be used.                 │
                │  ├────────────────────────────┼───────────────────────────────────────────────┤
                └─▶│ <datareader_qos_id>        │ The name, within the QosProvider XML file, of │
                   │ Optional                   │ the DDS DataReader QoS profile to use.        │
                   │                            │                                               │
                   │                            │ When not provided, the default QoS within the │
                   │                            │ profile will be used.                         │
                   │                            │ When not provided in the profile either, then │
                   │                            │ the DDS default will be used.                 │
                   └────────────────────────────┴───────────────────────────────────────────────┘

For FACE Connections to be able to communication, they have to have:
 - Same DDS Partition:       either <name> or partition within the DDS Publisher/Subscriber QoSses
 - Same DDS Topic Name:      <topic_name>
 - Same DDS Type Name:       <type_name>
 - Opposite FACE directions: one has to be SOURCE and the other DESTINATION (obviously)

###################################################################################################
-->

<connections_list>
    <connection>
        <name>HelloWorldPub</name>
        <type>DDS</type>
        <direction>SOURCE</direction>
        <platform_view_guid>1</platform_view_guid>
        <refresh_period>1000</refresh_period>
        <!--domain_id>0</domain_id-->
        <topic_name>CppFaceHelloWorld</topic_name>
        <type_name>HelloWorldData::Msg</type_name>
        <qos>
            <uri>file://defaults.xml</uri>
            <profile>HelloWorld</profile>
            <!--
            <domainparticipant_qos_id>Foo</domainparticipant_qos_id>
            <topic_qos_id>Foo</topic_qos_id>
            <publisher_qos_id>Foo</publisher_qos_id>
            <datawriter_qos_id>Foo</datawriter_qos_id>
            <subscriber_qos_id>Foo</subscriber_qos_id>
            <datareader_qos_id>Foo</datareader_qos_id>
            -->
        </qos>
    </connection>
    <connection>
        <name>HelloWorldSub</name>
        <type>DDS</type>
        <direction>DESTINATION</direction>
        <platform_view_guid>1</platform_view_guid>
        <refresh_period>1000</refresh_period>
        <!--domain_id>0</domain_id-->
        <topic_name>CppFaceHelloWorld</topic_name>
        <type_name>HelloWorldData::Msg</type_name>
        <qos>
            <uri>file://defaults.xml</uri>
            <profile>HelloWorld</profile>
            <!--
            <domainparticipant_qos_id>Foo</domainparticipant_qos_id>
            <topic_qos_id>Foo</topic_qos_id>
            <publisher_qos_id>Foo</publisher_qos_id>
            <datawriter_qos_id>Foo</datawriter_qos_id>
            <subscriber_qos_id>Foo</subscriber_qos_id>
            <datareader_qos_id>Foo</datareader_qos_id>
            -->
        </qos>
    </connection>
</connections_list>
