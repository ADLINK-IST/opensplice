<?xml version="1.0" encoding="UTF-8"?>
<splice_meta_config version="1.0">
<!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.splice-dds.org/splice_metaconfig.xsd"-->
    <rootElement name="OpenSplice" minOccurrences="1" maxOccurrences="1">
        <comment><![CDATA[
            <p>OpenSplice utilizes a shared-memory architecture where data is physically
            present only once on any machine and where smart administration still
            provides each subscriber with his own private view on this data. This
            allows a subscribers data cache to be perceived as an individual
            database that can content-filtered, queried, etc. (using the
            content-subscription profile as supported by OpenSplice). This
            shared-memory architecture results in an extremely low footprint,
            excellent scalability and optimal performance when compared to
            implementations where each reader/writer are communication-end points
            each with its own storage (i.e. historical data both at reader and
            writer) and where the data itself still has to be moved, even within
            the same platform.</p>

            <p>Shared-memory is not only used to interconnect all applications that
            reside within one computing node, but also for a configurable and
            extensible set of services. These services provide pluggable functionality
            such as networking (providing QoS-driven real-time networking based
            on multiple reliable multicast 'channels'), durability (providing
            fault-tolerant storage for both real-time state data as well as
            persistent settings) and a remote control & monitoring soap-service
            (providing remote web-based access using the SOAP protocol from the
            OpenSplice Tuner tool).</p>

            <p>Because of the pluggable architecture, the OpenSplice middleware
            can be easily configured on the fly by specifying which services to
            be used as well as specifying their optimal configuration for the
            application domain (networking parameters, durability levels, etc.).
            Typically, there are many nodes within a system.</p>

            <p>The OpenSplice middleware including its services can be configured
            by means of easy maintainable XML-file(s).</p>
        ]]></comment>
    </rootElement>
    <elementCommon/>
    <element name="Domain" minOccurrences="1" maxOccurrences="1">
        <comment><![CDATA[
            <p>The Domain service is responsible for creating and initialising a shared nodal administration(in shared memory)
            for a specific DDS Domain on a computing node. Without this administration, no other service or application is able
            to participate in a DDS Domain.</p>

            <p>Once the administration has been initialised, the Domain service starts the set of pluggable services. The
            lifecycle of the started services is under control of the Domain service, which means it will monitor the health
            of all started services, take corrective actions if needed and stop the services when it is terminated.</p>

            <p>When a shutdown of the OpenSplice Domain service is requested, it will react by announcing the shutdown using the
            shared administration. Applications will not be able to use DDS functionality anymore and services are requested
            to terminate elegantly. Once this has succeeded, the Domain service will destroy the shared administration and
            finally terminate itself.</p>
        ]]></comment>
        <leafString name="Name" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                    This element specifies the name of the instantiated DDS domain. In general, it is recommended to change
                    this name to a name that identifies the domain. If several different DDS domains are required to run
                    simultaneously, then they all need to have their own domain name.
            ]]></comment>
            <maxLength>0</maxLength>
            <default>OpenSpliceV4</default>
        </leafString>
        <element name="Lease" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                    The Lease parameters specify how the Domain service as well as the services started by the
                    Domain service must announce their liveliness in the shared administration.
            ]]></comment>
            <leafFloat name="ExpiryTime" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element specifies the interval in which services have to announce their liveliness.</p>
                    <p>Every OpenSplice service including the Domain service itself has to announce its liveliness regularly.
                    This allows corrective actions to be taken when one of the services becomes non-responsive. This
                    element specifies the required interval. Decreasing the interval decreases the time in which
                    non-responsiveness of a service is detected, but leads to more processing. Increasing it has
                    the opposite effect.</p>
                ]]></comment>
                <default>20.0</default>
                <minimum>0.2</minimum>
                <attributeFloat name="update_factor" required="true">
                    <comment><![CDATA[
                        In case of a (temporary) high CPU load, the scheduling behaviour of the operating system might
                        affect the capability of a service to assert its liveliness 'on time'. The <i>update_factor</i> attribute
                        introduces some elasticity in this mechanism by making the services assert their liveliness more
                        often than required by the <i>ExpiryTime</i>. Services will report their liveliness every
                        <i>ExpiryTime</i> multiplied by this <i>update_factor</i>.
                    ]]></comment>
                    <minimum>0.01</minimum>
                    <maximum>1.0</maximum>
                    <default>0.1</default>
                </attributeFloat>
            </leafFloat>
        </element>
        <leafFloat name="ServiceTerminatePeriod" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the amount of time the Domain Service, when
                instructed to terminate, should wait for the other configured Services
                to terminate.
            ]]></comment>
            <minimum>1.0</minimum>
            <maximum>60.0</maximum>
            <default>10.0</default>
        </leafFloat>
        <element name="Database" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                    This element contains information about the nodal administration (shared memory) to be used.
            ]]></comment>
            <leafLong name="Size" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                        This element specifies the size of the shared memory segment holding the database. Change
                        this value if your system requires more memory than the default. Please note that the
                        operating system should be configured support the requested size. On most platforms you need
                        'root' privileges to set large sizes.
                ]]></comment>
                <minimum>1048567</minimum>
                <default>10485670</default>
            </leafLong>
            <leafString name="Address" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element specifies the start address where the
                    nodal shared administration is mapped into the virtual
                    memory for each process that attaches to the current Domain.
                    The possible values are platform dependent.</p>
                    <p>Change this value if the default address is already in
                    use, for example by another Domain Service or another
                    product.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <minimum>0x40000000</minimum>
                <maximum>0x80000000</maximum>
                <default>0x40000000</default>
            </leafString>
            <leafEnum name="Locking" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element specifies the locking policy of the Database, indicating
                    whether to lock pages in physical memory or not.</p>
                    <p>With the virtual memory architecture, the operating system decides when
                    to swap memory pages from internal memory to disc. This results in execution
                    delays for the corresponding code because it has to be paged back into main
                    memory. The element <i>Locking</i> can be used to avoid such swapping for the
                    shared memory where the database resides. The user needs the appropriate
                    privileges from the underlying operating system to be able to use this option.</p>
                    <p>The possible values are:</p>
                    <ul>
                    <li><b>True</b>: lock the pages in memory.</li>
                    <li><b>False</b>: don't lock the pages in memory.</li>
                    <li><b>Default</b>: use the platform-dependent default value.</li>
                    </ul>
                ]]></comment>
                <value>True</value>
                <value>False</value>
                <value>Default</value>
                <default>Default</default>
            </leafEnum>
        </element>
        <element name="Listeners" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                    This element specifies policies for the thread that services the listeners that
                    the application specifies on the API-level.
            ]]></comment>
            <leafLong name="StackSize" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                        This element specifies the stack size of the listener thread.
                ]]></comment>
                <minimum>64000</minimum>
                <default>64000</default>
            </leafLong>
        </element>
        <element name="Service" minOccurrences="0" maxOccurrences="0">
            <comment><![CDATA[
                The Domain service is responsible for starting, monitoring and stopping the pluggable services.
                One Service element must be specified for every service that needs to be started by the Domain service.
            ]]></comment>
            <attributeString name="name" required="true">
                <comment><![CDATA[
                    <p>This attribute specifies the name by which the corresponding service is
                    identified in the rest of the configuration file.</p>
                    <p>In the OpenSplice DDS configuration file, services and their settings
                    are identified by a name. When the Domain Service starts a particular
                    service, its corresponding name is passed. The service in question uses
                    this name in order to find its own configuration settings in the rest of
                    the configuration file. The name specified here must match the name
                    attribute of the main element of the corresponding service.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>durability</default>
            </attributeString>
            <attributeBoolean name="enabled" required="false">
                <comment><![CDATA[
                    <p>This attribute indicates whether the service is actually started or not.</p>
                    <p>Toggling a service between enabled and disabled is a quick alternative for
                    commenting out the corresponding lines in the configuration file.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>true</default>
            </attributeBoolean>
            <leafString name="Command" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element specifies the command to be executed in order to start the service.</p>
                    <p>OpenSplice DDS comes with a set of pluggable services. The Command element specifies
                    the name of the actual service executable (possibly including its path, but always
                    including its extension, e.g. ‘.exe’ on the Windows platform). When no path is included,
                    the Domain Service will search the <i>PATH</i> environment variable for the corresponding
                    executable. Once located, it will be started as a separate process.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>durability</default>
            </leafString>
            <leafString name="MemoryPoolSize" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>CAUTION: GHS INTEGRITY ONLY OPTION!! This element maps directly into the integrate file
                    for the address space for this service. Consult the GHS Integrate documentation for
                    further information on this setting. Valid values are decimal or hexadecimal numbers and
                    they express the number of bytes.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>0</default>
            </leafString>
            <leafString name="HeapSize" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p><b>CAUTION</b>: This element should only be used on the GHS Integrity platform!!</p>
                    <p>This element maps directly into the integrate file
                    for the address space for this service. Consult the GHS Integrate documentation for
                    further information on this setting. Valid values are decimal or hexadecimal numbers and
                    they express the number of bytes.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>0</default>
            </leafString>
            <leafString name="StackSize" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>CAUTION: GHS INTEGRITY ONLY OPTION!! This element maps directly into the integrate file
                    for the address space for this service. Consult the GHS Integrate documentation for
                    further information on this setting. Valid values are decimal or hexadecimal numbers and
                    they express the number of bytes.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>0</default>
            </leafString>
            <leafString name="Configuration" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element allows overriding of the default URI (specified in the
                    <i>OSPL_URI</i> environment variable, or passed explicitly as command-
                    line parameter to the <i>ospl</i> executable) with the configuration
                    resource specified here.</p>
                    <p>When the Domain Service is started by the <i>ospl</i> executbale,
                    by default it passes on its own URI to the services that it starts.
                    This is valid when the configuration of the service is located in the
                    same resource file as the configuration of the Domain Service itself.
                    (This is a convenient situation in most cases).</p>
                    <p>If the configuration of the current service is located in a separate
                    resource file, a separate URI identifying that particular resource file
                    must be specified in this element.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>${OSPL_URI}</default>
            </leafString>
            <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the type of OS scheduling class will be
                    used by the Domain service to create the service process. Services
                    can only be started within the scheduling classes that are
                    supported by the underlying operating system.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that the Domain Service will
                        assign to the current Service when it is started. Only priorities that
                        are supported by the underlying operating system can be assigned to this
                        element. The user may need special privileges from the underlying
                        operating system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified Priority is a relative
                            or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that the Domain
                        Service will assign to the current Service when it is started.
                        The user may need the appropriate privileges from the underlying
                        operating system to be able to assign some of the privileged
                        scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
            <leafBoolean name="Locking" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element specifies the locking policy of the current Service
                    process, indicating whether pages should be locked in physical memory
                    or not.</p>
                    <p>On platforms with a virtual memory architecture, the operating
                    system decides when to swap memory pages from internal memory to disk.
                    This results in execution delays for the corresponding code because it
                    has to be paged back into main memory. The element <i>Locking</i> can be
                    used to avoid such swapping for the current Service. The user needs the
                    appropriate privileges from the underlying operating system to be able
                    to use this option.</p>
                ]]></comment>
                <default>false</default>
            </leafBoolean>
            <leafEnum name="FailureAction" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>This element specifies what action to take at the moment that the service seems
                    to have become non-responsive.</p>
                    <p>Each service reports its liveliness regularly using the shared administration.
                    If the service fails to do so, the Domain service will assume the service has
                    become non-responsive. This element determines what action is taken
                    by the DomainService in case this happens.</p>
                    <p>The following actions are available:</p>
                    <ul>
                        <li><b>skip</b>: Ignore the non-responsiveness and continue.</li>
                        <li><b>kill</b>: End the service process by force.</li>
                        <li><b>restart</b>: End the service process by force and restart it.</li>
                        <li><b>systemhalt</b>:  End all OpenSplice services including the Domain service
                        (for the current DDS Domain on this computing node).</li>
                    </ul>
                ]]></comment>
                <value>kill</value>
                <value>restart</value>
                <value>skip</value>
                <value>systemhalt</value>
                <default>skip</default>
            </leafEnum>
        </element>
        <element name="BuiltinTopics" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
            This element specifies the granularity of the builtin topics.
            ]]></comment>
            <attributeBoolean name="enabled" required="true">
                <comment><![CDATA[
                This attribute enables or disables the publication of builtin topics
                for the existence of individual Participants/DataWriters/DataReaders.
                The existence of Topics will always be communicated by means of builtin
                topics, regardless of the value specified here.
                ]]></comment>
                <default>true</default>
            </attributeBoolean>
        </element>
        <element name="PriorityInheritance" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
            This element specifies the usage on Priority Inheritance on Muexes in this domain.
            ]]></comment>
            <attributeBoolean name="enabled" required="true">
                <comment><![CDATA[
                This attribute enables or disables priority inheritance for mutexes,
                if that is supported by the underlying Operating System. 
                ]]></comment>
                <default>true</default>
            </attributeBoolean>
        </element>
        <element name="Statistics" minOccurrences="0" maxOccurrences="1">
           <comment><![CDATA[
            This element specifies the policies regarding statistics. Various statistics
            can be generated by OpenSplice DDS to help you analyze and tune application
            behaviour during application development.  Since this introduces extra overhead,
            it is generally turned off in a runtime system.
            ]]></comment>
            <element name="Category" minOccurrences="0" maxOccurrences="0">
                <comment><![CDATA[
                    This element specifies the properties for a particular category of statistics.
                ]]></comment>
                <attributeBoolean name="enabled" required="false">
                    <comment><![CDATA[
                        This attribute enables or disables the generation of statistics for the
                        specified category.
                    ]]></comment>
                    <default>true</default>
                </attributeBoolean>
                <attributeEnum name="name" required="true">
                    <comment><![CDATA[
                        This attribute specifies the name of a particular category of statistics.
                    ]]></comment>
                    <value>durability</value>
                    <value>reader</value>
                    <value>writer</value>
                    <value>networking</value>
                    <default>reader</default>
                </attributeEnum>
            </element>
        </element>
        <element name="ReportPlugin" minOccurrences="0" maxOccurrences="1">
        <comment><![CDATA[
            This Tag specifies user defined report functionality to be used by
            the domain. All services and applications will load a user provides 
            report library that will implement the report plugin interface. 
            The report interface consists of three operations; 
            initialize, report and finalize.
        ]]></comment>
        <element name="Library" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This tag specifies the library to be loaded.
            ]]></comment>
            <attributeString name="file_name" required="true">
                <comment><![CDATA[
                    This attribute specifies the library to be loaded.
                ]]></comment>
                <default>my_reporter.so</default>
                <maxLength>0</maxLength>
            </attributeString>
        </element>
        <element name="Initialize" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This tag specifies the library symbol that will be assigned to the 
                report Initialize operation. This operation will be invoked 
                initially after loading the library to perform initialization of 
                the report facility if needed.
            ]]></comment>
            <attributeString name="symbol_name" required="true">
                <comment><![CDATA[
                    This attribute specifies the library symbol that will be 
                    assigned to the report Initialize operation. This operation 
                    will be invoked initially after loading the library to 
                    perform initialization of the report facility if needed.
                ]]></comment>
                <default>my_reporter.so</default>
                <maxLength>0</maxLength>
            </attributeString>
        </element>
        <element name="Report" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This tag specifies the library symbol that will be assigned to 
                the report Report operation. This operation will be invoked 
                on all reports performed by the DDS service.
            ]]></comment>
            <attributeString name="symbol_name" required="true">
                <comment><![CDATA[
                    This attribute specifies the library symbol that will be 
                    assigned to the report Report operation. This operation will 
                    be invoked on all reports performed by the DDS service.
                ]]></comment>
                <default>my_reporter.so</default>
                <maxLength>0</maxLength>
            </attributeString>
        </element>
        <element name="Finalize" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This tag specifies the library symbol that will be assigned 
                to the report Finalize operation. This operation will be 
                invoked upon process termination to perform de-initialization 
                of the report facility if needed.
            ]]></comment>
            <attributeString name="symbol_name" required="true">
                <comment><![CDATA[
                    This attribute specifies the library symbol that will be assigned 
                    to the report Finalize operation. This operation will be 
                    invoked upon process termination to perform de-initialization 
                    of the report facility if needed.
                ]]></comment>
                <default>my_reporter.so</default>
                <maxLength>0</maxLength>
            </attributeString>
        </element>
    </element>
    <element name="PartitionAccess" minOccurrences="0" maxOccurrences="1">
        <comment><![CDATA[
            This configuration tag specifies the access rights for a 
            selection of partitions.
        ]]></comment>
        <attributeString name="partition_expression" required="true">
            <comment><![CDATA[
                This attribute specifies the partitions by name. 
                The wildcards ‘*’ and ‘?’ are allowed and the specified 
                access rights will be applied to all matching partitions. 
                In case partitions match multiple rules the rules will be 
                applied in sequence of declaration.
            ]]></comment>
            <default>*</default>
            <maxLength>0</maxLength>
        </attributeString>
        <attributeEnum name="access_mode" required="true">
            <comment><![CDATA[
                This attribute specifies the access rights that will be 
                applied to the specified partitions. The following values 
                are applicable:
                <ul>
                    <li>none</li>
                    <li>read</li>
                    <li>write</li>
                    <li>readwrite</li>
                </ul>
            ]]></comment>
            <value>none</value>
            <value>read</value>
            <value>write</value>
            <value>readwrite</value>
            <default>readwrite</default>
        </attributeEnum>
        </element>
        
        <element name="TopicAccess" minOccurrences="0" maxOccurrences="1">
        <comment><![CDATA[
            This configuration tag specifies the access rights for a 
            selection of topics.
        ]]></comment>
        <attributeString name="topic_expression" required="true">
            <comment><![CDATA[
                This attribute specifies the topics by name. 
                The wildcards ‘*’ and ‘?’ are allowed and the specified 
                access rights will be applied to all matching topics. 
                In case topics match multiple rules the rules will be 
                applied in sequence of declaration.
            ]]></comment>
            <default>*</default>
            <maxLength>0</maxLength>
        </attributeString>
        <attributeEnum name="access_mode" required="true">
            <comment><![CDATA[
                This attribute specifies the access rights that will be 
                applied to the specified topics. The following values 
                are applicable:
                <ul>
                    <li>none</li>
                    <li>read</li>
                    <li>write</li>
                    <li>readwrite</li>
                </ul>
            ]]></comment>
            <value>none</value>
            <value>read</value>
            <value>write</value>
            <value>readwrite</value>
            <default>readwrite</default>
        </attributeEnum>
        </element>
    </element>
    
     
    <element name="Daemon" minOccurrences="0" maxOccurrences="1">
        <comment><![CDATA[
            Every domain is controlled by exactly one daemon: the Splice Daemon.
            The Splice Daemon configuration expects a root element named
            <i>OpenSplice/Daemon</i>. Within this root element, the Splice Daemon will
            look for several child-elements. Each of these child elements is
            listed and explained.
        ]]></comment>
        <leafBoolean name="Locking" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                <p>This element specifies the locking policy for the Splice Deamon
                process, indicating whether its pages should be locked in physical
                memory or not.</p>
                On platforms with a virtual memory architecture, the operating
                system decides when to swap memory pages from internal memory to disk.
                This results in execution delays for the corresponding code because it
                has to be paged back into main memory. The element <i>Locking</i> can be
                used to avoid such swapping for the Splice Deamon. The user needs the
                appropriate privileges from the underlying operating system to be able
                to use this option.
            ]]></comment>
            <default>false</default>
        </leafBoolean>
        <element name="KernelManager" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                 <p>This element specifies the behaviour of the KernelManager.</p>
                 <p>The kernel manager actively monitors the OpenSplice kernel
                 and executes administrative tasks:</p>
                 <ul>
                   <li>check topic consistency</li>
                   <li>determine liveliness status of readers and writers</li>
                   <li>notify readers and writers on incompatible QoS</li>
                 </ul>
            ]]></comment>
            <element name="Scheduling" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the scheduling policies used to control
                    the KernelManager thread.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the
                        KernelManager thread. Only priorities that are supported by the
                        underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be
                        used by the KernelManager thread. The user may need the appropriate
                        privileges from the underlying operating system to be able to
                        assign some of the privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="GarbageCollector" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                <p>This element specifies the behaviour of the GarbageCollector.</p>
                <p>The garbage collector is a safety mechanism and is responsible for
                reclaiming resources in case an application or remote node does not
                terminate properly.</p>
            ]]></comment>
            <element name="Scheduling" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the scheduling policies used to control the
                    GarbageCollector thread.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by
                        the GarbageCollector thread. Only priorities that are supported
                        by the underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be
                        used by the GarbageCollector thread. The user may need the
                        appropriate privileges from the underlying operating system to
                        be able to assign some of the privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="ResendManager" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element controls the characteristics of the ResendManager thread.
            ]]></comment>
            <element name="Scheduling" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the type of OS scheduling class used by
                    the thread that does local resends for the builtin participant.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the
                        ResendManager thread. Only priorities that are supported by the
                        underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by
                        the ResendManager thread. The user may need the appropriate privileges from
                        the underlying operating system to be able to assign some of the
                        privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
    </element>
    <element name="DurabilityService" minOccurrences="0" maxOccurrences="1">
        <comment><![CDATA[
            The responsibilities of the durability service are to realize the
            durable properties of data in an OpenSplice system.
        ]]></comment>
        <attributeString name="name" required="true">
            <comment><![CDATA[
                This attribute identifies the configuration for the Durability service.
                Multiple Durability service configurations can be specified in one single
                resource. The actual applicable configuration is determined by the value
                of the name attribute, which must match the one specified under the
                <i>OpenSplice/Domain/Service[@name]</i> in the configuration of
                the DomainService.
            ]]></comment>
            <maxLength>0</maxLength>
            <default>durability</default>
        </attributeString>
        <element name="Watchdog" minOccurrences="0" maxOccurrences="1">
               <comment><![CDATA[
                This element controls the characteristics of the Watchdog thread.
            ]]></comment>
            <element name="Scheduling" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the type of OS scheduling class will be
                    used by the thread that announces its liveliness periodically.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the
                        watchdog thread. Only priorities that are supported by the
                        underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by
                        the watchdog thread. The user may need the appropriate privileges from
                        the underlying operating system to be able to assign some of the
                        privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="Network" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                    <p>Applications need to be able to gain access to historical data in a system.
                    When the local DDS service gets connected to a remote DDS service by means
                    of the Networking service, (parts of) the historical data might not be
                    consistent between the local and remote Durability services. The Durability
                    service needs to be able to detect the other available Durability services
                    and exchange historical data with them to keep and/or restore consistency
                    in historical data between them.</p>

                    <p>The Network element provides handles to fine-tune the behavior of the
                    communication between Durability services on different computing nodes on
                    network level. These settings only apply when the Networking service is active.</p>
            ]]></comment>
            <attributeFloat name="latency_budget" required="false">
                <comment><![CDATA[
                    <p>This attribute controls the latency_budget QoS setting
                    that is used by the Durability service for its communication
                    with other Durability services.</p>
                    <p>It specfies the maximum acceptable delay (in seconds) from
                    the time the data is written until the data is insterted in the
                    cache of the receiving Durability service(s) and the receiver is
                    notified of the fact. The default value is zero, indicating the
                    delay should be minimized.</p>
                ]]></comment>
                <minimum>0.0</minimum>
                <default>0.0</default>
            </attributeFloat>
            <attributeInt name="transport_priority" required="false">
                <comment><![CDATA[
                    <p>This attribute controls the transport priority QoS
                    setting that is used by the Durability service for its
                    communication with other Durability services.</p>
                    <p>It indicates the importance of the communication of the
                    Durability service with other Durability services in the
                    system. The transport priority specified here will be
                    interpreted by the Networking service and should be
                    used to differentiate the priority between communication
                    of user applications and communication of the Durability
                    service.</p>
                    ]]></comment>
                <minimum>0</minimum>
                <default>0</default>
            </attributeInt>
            <element name="Heartbeat" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>During startup and at runtime, the network topology can change
                    dynamically. This happens when OpenSplice services are started/stopped
                    or when a network cable is plugged in/out. The Durability services
                    need to keep data consistency in that environment. To detect newly
                    joining services as well as detecting nodes that are leaving, the
                    Durability service uses a hearbeat mechanism. This element allows
                    fine-tuning of this mechanism.</p>

                    <p>Please note this heartbeat mechanism is similar to but not the
                    same as the service liveliness assertion.</p>
                ]]></comment>
                <attributeFloat name="latency_budget" required="false">
                    <comment><![CDATA[
                        This attribute controls the latency budget QoS setting that
                        is only used by the Durability service for sending its heartbeats.
                        It overrules the value of the <i>DurabilityService/Network[@latency_budget]</i>.
                    ]]></comment>
                    <minimum>0.0</minimum>
                    <default>0.0</default>
                </attributeFloat>
                <attributeInt name="transport_priority" required="false">
                    <comment><![CDATA[
                        This attribute controls the transport priority QoS setting (in seconds) that
                        is only used by the Durability service for for sending its heartbeats.
                        It overrules the value of the <i>DurabilityService/Network[@transport_priorrity]</i>.
                    ]]></comment>
                    <minimum>0</minimum>
                    <default>0</default>
                </attributeInt>
                <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the scheduling parameters used by the
                        thread that periodically sends the heartbeats.
                    ]]></comment>
                    <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread priority that will be used
                            by the thread that periodically sends the heartbeats. Only
                            priorities that are supported by the underlying operating
                            system can be assigned to this element. The user may need
                            special privileges from the underlying operating system to
                            be able to assign some of the privileged priorities.
                        ]]></comment>
                        <default>0</default>
                        <attributeEnum name="priority_kind" required="false">
                            <comment><![CDATA[
                                This attribute specifies whether the specified
                                Priority is a relative or absolute priority.
                            ]]></comment>
                            <value>Relative</value>
                            <value>Absolute</value>
                            <default>Relative</default>
                        </attributeEnum>
                    </leafInt>
                    <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread scheduling class that will
                            be used by the thread that periodically sends the heartbeats.
                            The user may need the appropriate privileges from the underlying
                            operating system to be able to assign some of the privileged
                            scheduling classes.
                        ]]></comment>
                        <value>Timeshare</value>
                        <value>Realtime</value>
                        <value>Default</value>
                        <default>Default</default>
                    </leafEnum>
                </element>
                <leafFloat name="ExpiryTime" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        <p>This element specifies the maximum amount of time in
                        which the Durability service expects a new heartbeat of
                        other Durability services. This is obviously also the
                        same amount of time in which the Durability service must
                        send a heartbeat itself.</p>
                        <p>Increasing this value will lead to less networking
                        traffic and overhead but also to less responsiveness with
                        respect to the liveliness of a Durability service. Change
                        this value according to the need of your system with respect
                        to these aspects.</p>
                    ]]></comment>
                    <default>10.0</default>
                    <minimum>0.2</minimum>
                    <maximum>20.0</maximum>
                    <attributeFloat name="update_factor" required="true">
                        <comment><![CDATA[
                            <p>In case of a (temporary) high CPU load, the scheduling
                            behaviour of the operating system might affect the
                            capability of the Durability service to send its
                            heartbeat 'on time'. This attribute introduces some
                            elasticity in this mechanism by making the service
                            send its heartbeat more often then required by the
                            ExpiryTime.</p>
                            <p>The Durability service will report its liveliness
                            every <i>ExpiryTime</i> multiplied by this
                            <i>update_factor</i>.</p>
                        ]]></comment>
                        <minimum>0.1</minimum>
                        <maximum>0.9</maximum>
                        <default>0.2</default>
                    </attributeFloat>
                </leafFloat>
            </element>
            <leafFloat name="InitialDiscoveryPeriod" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    <p>To be able to ensure data consistency of historical data, the
                    Durability service needs to know which other Durability services
                    are available in the system. The value of this element determines
                    the amount of time the Durability service takes at startup to get
                    acquinted with all other Durability services in the system.</p>
                    <p>Increasing the value will increase the startup time of the
                    Durability service, but is required in larger domains where a lot
                    of network bandwidth is used.</p>
                ]]></comment>
                <default>3.0</default>
                <minimum>0.1</minimum>
                <maximum>60.0</maximum>
            </leafFloat>
            <element name="Alignment" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    The Durability service is responsible for keeping its local cache
                    consistent with the other available Durability caches in the
                    system. To do this, it needs to exchange data to recover from
                    inconsistencies. The exchange of durable data to restore
                    consistency is called alignment. This element allows fine-tuning
                    alignment behaviour of the Durability service.
                ]]></comment>
                <attributeFloat name="latency_budget" required="false">
                    <comment><![CDATA[
                        This attribute specifies the latency budget QoS setting (in seconds)
                        that is only used by the Durability service for the alignment of data.
                        It overrules the value of the
                        OpenSplice/DurabilityService/Network[@latency_budget].
                    ]]></comment>
                    <minimum>0.0</minimum>
                    <default>0.0</default>
                </attributeFloat>
                <attributeInt name="transport_priority" required="false">
                    <comment><![CDATA[
                        This attribute specifies the transport priority QoS setting
                        that is used by the Durability service for the alignment of data.
                        It overrules the value of the
                        <i>DurabilityService/Network[@transport_priorrity]</i> for the
                        alignment of data only.
                    ]]></comment>
                    <minimum>0</minimum>
                    <default>0</default>
                </attributeInt>
                <leafBoolean name="TimeAlignment" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This attribute specifies whether time on all nodes in
                        the domain can be considered aligned or not. This setting
                        needs to be consistent for all durability services in the
                        domain. In case there is no time alignment, the durability
                        service needs to align more data since to compensate possible
                        timing gaps between different nodes in the domain.
                    ]]></comment>
                    <default>true</default>
                </leafBoolean>
                <element name="AlignerScheduling" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the scheduling parameters used to
                        control the thread that aligns other durability services.
                    ]]></comment>
                    <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread priority that will be
                            used by the aligner thread. Only priorities that are
                            supported by the underlying operating system can be
                            assigned to this element. The user may need special
                            privileges from the underlying operating system to be
                            able to assign some of the privileged priorities.
                        ]]></comment>
                        <default>0</default>
                        <attributeEnum name="priority_kind" required="false">
                            <comment><![CDATA[
                                This attribute specifies whether the specified
                                Priority is a relative or absolute priority.
                            ]]></comment>
                            <value>Relative</value>
                            <value>Absolute</value>
                            <default>Relative</default>
                        </attributeEnum>
                    </leafInt>
                    <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread scheduling class that
                            will be used by the aligner thread. The user may need the
                            appropriate privileges from the underlying operating
                            system to be able to assign some of the privileged
                            scheduling classes.
                        ]]></comment>
                        <value>Timeshare</value>
                        <value>Realtime</value>
                        <value>Default</value>
                        <default>Default</default>
                    </leafEnum>
                </element>
                <element name="AligneeScheduling" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the scheduling parameters used to
                        control the thread that makes sure the local node becomes
                        and stays aligned.
                    ]]></comment>
                    <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread priority that will be
                            used by the alignee thread. Only priorities that are
                            supported by the underlying operating system can be
                            assigned to this element. The user may need special
                            privileges from the underlying operating system to be
                            able to assign some of the privileged priorities.
                        ]]></comment>
                        <default>0</default>
                        <attributeEnum name="priority_kind" required="false">
                            <comment><![CDATA[
                                This attribute specifies whether the specified
                                Priority is a relative or absolute priority.
                            ]]></comment>
                            <value>Relative</value>
                            <value>Absolute</value>
                            <default>Relative</default>
                        </attributeEnum>
                    </leafInt>
                    <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread scheduling class that
                            will be used by the alignee thread. The user may need the
                            appropriate privileges from the underlying operating
                            system to be able to assign some of the privileged
                            scheduling classes
                        ]]></comment>
                        <value>Timeshare</value>
                        <value>Realtime</value>
                        <value>Default</value>
                        <default>Default</default>
                    </leafEnum>
                </element>
                <element name="RequestCombinePeriod"  minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        <p>When the Durability service detects an inconsistency with
                        another Durability service, it requests that service to align
                        it. The service that receives this request will restore
                        consistency by sending the requested information. In some
                        cases, the Durability service may receive alignment requests
                        from multiple Durability services for the same information
                        around the same moment in time. To reduce the processing and
                        networking load in that case, the Durability service is
                        capable of aligning multiple Durability services concurrently.</p>
                        <p>The RequestCombinePeriod has 2 child-elements: a setting
                        that is used when the current Durability Service is not yet
                        aligned with all others (<i>Initial</i>) and one for the period
                        after that (<i>Operational</i>). These values specify the maximum
                        amount of time the Durability service is allowed to wait with
                        alignment after an alignment request has been received.</p>
                        <p>Increasing the value will increase the amount of time in
                        which the Durability service restores from inconsistencies,
                        but will decrease the processing and network load in
                        case multiple Durability services need to resolve the
                        same data around the same time. Increasing the value
                        is useful in case OpenSplice is started at the same time
                        with more than two computing nodes.</p>
                    ]]></comment>
                    <leafFloat name="Initial" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the maximum amount of time the Durability
                            Service is allowed to wait with alignment after an alignment
                            request has been received and the service itself is not yet
                            considered operational because it has not yet aligned itself
                            with all other Durability Services.
                        ]]></comment>
                        <default>0.5</default>
                        <minimum>0.01</minimum>
                        <maximum>5.0</maximum>
                    </leafFloat>
                    <leafFloat name="Operational" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the maximum amount of time the Durability
                            Service is allowed to wait with alignment after an alignment
                            request has been received and the service itself is already
                            considered operational.
                        ]]></comment>
                        <default>0.01</default>
                        <minimum>0.01</minimum>
                        <maximum>5.0</maximum>
                    </leafFloat>
                </element>
                 
                <element name="Partition" minOccurrences="0" maxOccurrences="0">
                    <comment><![CDATA[
                        This tag specified an inter durability communication 
                        partition with specific qos settings. Alignment between 
                        durability services managed through this partition. 
                        In case multiple partitions are defined the partition 
                        with the highest alignment_priority that can provide 
                        the requested data will be used as data source. 
                        By default (no Partition specified) the 
                        durability services will use an internal partition 
                        that inherits the default qos policies and has the
                        default alignment_priority.
                    ]]></comment>
                    <attributeString name="Name" required="true">
                        <comment><![CDATA[
                            The name of the partition to use for alignment.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default>partition</default>
                    </attributeString>
                    <attributeInt name="alignment_priority" required="false">
                        <comment><![CDATA[
                            This attribute specifies the alignment priority of 
                            the partition used by the durability service to 
                            select the preferred partition to align from. If
                            no alignment_priority is configured, the service
                            uses 0 as default.
                        ]]></comment>
                        <default>0</default>
                        <minimum>0</minimum>
                    </attributeInt>
                    <attributeFloat name="latency_budget" required="false">
                        <comment><![CDATA[
                            This attribute overrules the latency budget for 
                            this partition specified at this point.
                        ]]></comment>
                        <default>0.0</default>
                        <minimum>0.0</minimum>
                    </attributeFloat>
                    <attributeInt name="transport_priority" required="false">
                        <comment><![CDATA[
                            This attribute overrules the transport priority for
                            this partition specified at this point.
                        ]]></comment>
                        <default>0</default>
                        <minimum>0</minimum>
                    </attributeInt>
                </element>
                 
            </element>
            <element name="WaitForAttachment" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    The Durability service depends on the Networking service for its
                    communication with other Durability services. Before it starts
                    communicating, it must make sure the Networking service is ready to
                    send the data. This element specifies what services must
                    be available and how long the Durability service must wait for them
                    to become available before sending any data.
                ]]></comment>
                <attributeInt name="maxWaitCount" required="false">
                    <comment><![CDATA[
                        This attribute specifies the number of times the Durability
                        service checks if the services specified in the
                        <i>DurabilityService/Network/WaitForAttachment/ServiceName</i>
                        elements are available before sending any data. An error is
                        logged if one of the services still is unavailable afterwards.
                        The service will continue after that, but this indicates
                        a problem in the configuration and the service might not
                        function correctly anymore.
                    ]]></comment>
                    <minimum>1</minimum>
                    <maximum>1000</maximum>
                    <default>200</default>
                </attributeInt>
                <leafString name="ServiceName" minOccurrences="1" maxOccurrences="0">
                    <comment><![CDATA[
                        This element specifies the name of the service(s) that the
                        Durability service waits for, before starting alignment activities
                        for a specific topic-partition combination. In a multinode
                        environment the name of the Networking service MUST be included
                        here to assure a proper functioning of the Durability service.
                    ]]></comment>
                    <default>networking</default>
                    <maxLength>0</maxLength>
                </leafString>
            </element>
            <!-- ResendTimeRange not supported yet.
            <leafFloat name="ResendTimeRange" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    The period (in seconds) ending with the time of the request, over
                    which the service wants samples produced by a node that has stopped.
                ]]></comment>
                <minimum>0.2</minimum>
                <maximum>2.0</maximum>
                <default>0.7</default>
            </leafFloat>
            -->
        </element>
        <element name="Persistent" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                <p>Durable data is divided in transient and persistent data. Transient
                data must stay available for as long as at least one Durability
                service is available in the system. For persistent data it is
                the same, but that type of data must also outlive the downtime
                of the system. The Durability service stores the persistent data
                on permanent storage to realize this. This element can be used
                to fine-tune the behaviour of the Durability service concerning
                the persistent properties of the data.</p>
                <p>Note these elements are only available as part of the DDS
                persistence profile of OpenSplice.</p>
            ]]></comment>
            <leafString name="StoreDirectory" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element determines the location where the persistent data will
                    be stored on disk. If this parameter is not configured,
                    the Durability service will not manage persistent data.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>/tmp/pstore</default>
            </leafString>
            <leafFloat name="StoreSessionTime" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the maximum session time (in seconds)
                    for the persistency thread. After this period of time, it makes
                    sure data is flushed to disk.
                ]]></comment>
                <maximum>60.0</maximum>
                <minimum>5.0</minimum>
                <default>20.0</default>
            </leafFloat>
            <leafFloat name="StoreSleepTime" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the period of time (in seconds) the
                    persistency thread sleeps between two sessions. This allows
                    influencing the CPU load of the persistency thread.
                ]]></comment>
                <maximum>10.0</maximum>
                <minimum>0.5</minimum>
                <default>2.0</default>
            </leafFloat>
            <leafEnum name="StoreMode" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the plug-in that  is used to store the
                    persistent data on disk. Currently only the XML plug-in is
                    supported, that will store persistent data in XML files.
                ]]></comment>
                <value>XML</value>
                <default>XML</default>
            </leafEnum>
            <leafInt name="StoreOptimizeInterval" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element determines after how many write actions the
                    persistent set for a specific partition-topic combination
                    is optimized on disk.
                ]]></comment>
                <maximum>1000000000</maximum>
                <minimum>0</minimum>
                <default>0</default>
            </leafInt>
            <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the scheduling parameters used to
                    control the thread that stores persistent data on permanent
                    storage.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the
                        persistent thread. Only priorities that are supported by the
                        underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be
                        used by the persistent thread. The user may need the appropriate
                        privileges from the underlying operating system to be able to
                        assign some of the privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
            <!-- Deprecated parameter
            <leafInt name="QueueSize" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    Maximum number of samples in the persistent queue. The available
                    resources determine the maximum value of this setting. Specify
                    0 for unlimited resources.
                ]]></comment>
                <minimum>0</minimum>
                <maximum>10000</maximum>
                <default>0</default>
            </leafInt>
            -->
        </element>
        <element name="NameSpaces" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                Scalability of durable data is an issue in large systems. Keeping
                all historical data on each node may not be feasible. Often nodes are
                interested in a small part of the total system data, on one hand
                driven by application interest, on the other hand driven by
                fault-tolerance (the need for replicates). This setting controls
                which historical data is managed by this Durability service
                (both transient and persistent).
            ]]></comment>
            <element name="NameSpace" minOccurrences="1" maxOccurrences="0">
                <comment><![CDATA[
                    A namespace describes a dependency between data in two or
                    more partitions by means of a partition expression. The
                    dependency specifies that the data within one of the
                    partitions has no right to exist separately from the data in
                    the other partition(s). Namespaces determine which data must
                    be managed by the Durability service. Data that does not
                    match any of the namespaces, is ignored by the Durability service.
                ]]></comment>
                <attributeEnum name="durabilityKind" required="true">
                    <comment><![CDATA[
                        <p>This element specifies how the durability service
                        manages the data within the NameSpace. The original
                        durability of the data (determined by the DataWriter
                        that wrote it) can be 'weakened' (Persistent > Transient
                        > Transient_local). This is useful to improve
                        resource usage of the durability service in the
                        situation where resource usage is more important
                        then fault-tolerance. This parameter cannot be used
                        to increase the original durability of samples.</p>
                        <p>In case the value of this parameter is larger then
                        the value a sample was published with, the sample will
                        be handled as specified in the DataWriter durability
                        QoS.</p>
                        <ul>
                         <li><b>Persistent</b>: Data is maximally handled as persistent.
                                               In practice this means a sample is
                                               handled exactly as specified in the
                                                DataWriter durability QoS that wrote
                                               it.</li>
                         <li><b>Transient</b>: A sample is maximally handled as if it
                                              were published with a transient
                                              durability QoS.</li>
                         <li><b>Transient_Local</b>: Data is maximally handled as if it
                                              were published with a
                                              transient_local durability QoS.</li>
                         <li><b>Durable</b>: Convenience value that behaves equal to
                                            Persistent.</li>
                         </ul>
                    ]]></comment>
                    <default>Durable</default>
                    <value>Durable</value>
                    <value>Persistent</value>
                    <value>Transient</value>
                    <value>Transient_Local</value>
                </attributeEnum>
                <attributeString name="name" required="false">
                    <comment><![CDATA[
                        The element determines the name for the NameSpace. This name
                        will appear in the tracing output of the durability service
                        and is therefore useful for debugging purposes.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>myNameSpace</default>
                </attributeString>
                <attributeEnum name="alignmentKind" required="true">
                    <comment><![CDATA[
                        <p>This element determines how the durability service manages
                        the data that matches the namespace. Scalability of durable
                        data is an issue in large systems. Keeping all historical data
                        on each node may not be feasible. Often nodes are interested
                        in a small part of the total system data. They are driven
                        by both performance (boot time, memory usage, network load,
                        CPU load) and fault tolerance (the need for replicates).</p>
                        <p>The durability service provides the following
                        mechanisms to request and provide historical data:
                        <ul>
                        <li><b>Initial_And_Aligner</b>: The durability service requests
                        historical data at startup and caches it locally. Historical
                        data will be available relatively fast for new local data
                        readers and the system is more fault-tolerant. However,
                        caching of historical data requires a relatively large
                        amount of resources and a long boot time. The Durability
                        service will also provide historical data to other
                        Durability services on a request basis.</li>
                        <li><b>Initial</b>: The same as Initial_And_Aligner, except the
                        Durability service will not provide other Durability services
                        with historical data. This is useful when applications
                        on the current node need all the processing and network
                        bandwidth and dynamic interference is not allowed.</li>
                        <li><b>Lazy</b>: The Durability service caches historical data
                        after local application interest arises for the first
                        time and a remote Durability service aligns the first
                        data reader. Historical data is available relatively slow
                        for the first data reader, but for every new data reader
                        it is relatively fast. The caching resources are only used
                        when local interest in the data arises, so it only requires
                        resources if there is actual local interest. However,
                        this method provides no fault-tolerance for the domain,
                        because the local Durability service is only partly a replica
                        and is not able to provide historical data to remote
                        Durability service and/or remote data readers.</li>
                        <li><b>On_Request</b>: The Durability service will not cache
                        historical data, but will align each separate DataReader
                        on a request basis (in the situation where it calls
                        wait_for_historical_data). Each new DataReader that
                        wants historical data therefore leads to a new alignment
                        action. This is a good setting to limit the amount of
                        resources used on the node, but will potentially lead to
                        more network traffic. This method provides no
                        fault-tolerance for the domain.</li>
                        </ul></p>
                    ]]></comment>
                    <default>Initial_And_Aligner</default>
                    <value>Initial</value>
                    <value>Initial_And_Aligner</value>
                    <value>Lazy</value>
                    <value>On_Request</value>
                </attributeEnum>
                <attributeEnum name="mergePolicy" required="false">
                    <comment><![CDATA[
                    This tag specifies the merge policy applicable for a 
                    specific namespace. The following merge policy values are 
                    applicable:
                    <ul>
                    <li>ignore - No alignment will take place. This is also 
                    the default value if not specified.</li>
                    <li>merge - Existing data will remain and data from others 
                    will be aligned.</li>
                    <li>reset - Existing data is removed.</li>
                    <li>replace - Existing data is removed and data from 
                    others will be aligned.</li>
                    ]]></comment>
                    <default>ignore</default>
                    <value>merge</value>
                    <value>reset</value>
                    <value>replace</value>
                    <value>ignore</value>
                </attributeEnum>
                <leafString name="Partition" minOccurrences="1" maxOccurrences="0">
                    <comment><![CDATA[
                        This element specifies a partition expression that
                        matches the namespace. A namespace consists of a set of
                        partition expressions. Together they determine the
                        partitions that belong to the namespace. Make sure the
                        different name-spaces do not have an overlap in partitions.
                        The default configuration has one namespace containing all
                        partitions. A partition may contain the
                        wildcards '*' to match any number of characters and '?'
                        to match one single character.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>*</default>
                </leafString>
            </element>
        </element>
        <element name="EntityNames" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the names of the various entities used by the
                DurabilityService. The names specified here will be displayed in the
                OpenSplice DDS Tuner when viewing the DurabilityService..
            ]]></comment>
            <leafString name="Publisher" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the name of the durability publisher.
                ]]></comment>
                <maxLength>64</maxLength>
                <default>durabilityPublisher</default>
            </leafString>
            <leafString name="Subscriber" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the name of the durability subscriber.
                ]]></comment>
                <maxLength>64</maxLength>
                <default>durabilitySubscriber</default>
            </leafString>
            <leafString name="Partition" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the name of the durability partition.
                ]]></comment>
                <maxLength>64</maxLength>
                <default>durabilityPartition</default>
            </leafString>
        </element>
        <element name="Tracing" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                    This element controls the amount and type of information that is
                    written into the tracing log by the Durability Service. This is
                    useful to track the Durability Service during application
                    development. In the runtime system it should be turned off.
            ]]></comment>
            <attributeBoolean name="synchronous" required="false">
                <default>FALSE</default>
            </attributeBoolean>
            <leafString name="OutputFile" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This option specifies where the logging is printed to. Note that
                    "stdout" is considered a legal value that represents "standard out"
                    and "stderr" is a legal value representing "standard error".
                    The default value is an empty string, indicating that all tracing
                    is disabled.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>durability.log</default>
            </leafString>
            <leafBoolean name="Timestamps" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies whether the logging must contain timestamps.
                ]]></comment>
                <attributeBoolean name="absolute" required="false">
                    <comment><![CDATA[
                        This attribute specifies whether the timestamps are absolute or
                        relative to the startup time of the service.
                    ]]></comment>
                    <default>true</default>
                </attributeBoolean>
                <default>true</default>
            </leafBoolean>
            <leafEnum name="Verbosity" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the verbosity level of the loggin
                    information. The higher the level, the more (detailed)
                    information will be logged.
                ]]></comment>
                <value>SEVERE</value>
                <value>WARNING</value>
                <value>INFO</value>
                <value>CONFIG</value>
                <value>FINE</value>
                <value>FINER</value>
                <value>FINEST</value>
                <default>INFO</default>
            </leafEnum>
        </element>
    </element>

    <element name="NetworkService" minOccurrences="0" maxOccurrences="0">
        <comment><![CDATA[
            When communication endpoints are located on different computing nodes,
            the data produced using the local DDS service must be communicated to
            the remote DDS service and the other way around. The Networking service
            provides a bridge between the local DDS service and a network interface.
            Multiple Networking services can exist next to each other; each serving
            one (or more) physical network interface(s). The Networking service
            is responsible for forwarding data to the network and for receiving data
            from the network. It can be configured to distinguish multiple
            communication channels with different QoS policies assigned to be able
            to schedule sending and receival of specific messages to provide optimal
            performance for a specific application domain.
        ]]></comment>
        <attributeString name="name" required="true">
            <comment><![CDATA[
                This attribute identifies the configuration for the Networking service.
                Multiple Network service configurations can be specified in one single
                resource. The actual applicable configuration is determined by the value
                of the name attribute, which must match the one specified under the
                <i>//OpenSplice/Domain/Service[@name]</i> in the configuration of
                the DomainService.
            ]]></comment>
            <maxLength>0</maxLength>
            <default>networking</default>
        </attributeString>
        <element name="Watchdog" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element controls the characteristics of the Watchdog thread.
            ]]></comment>
            <element name="Scheduling" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the type of OS scheduling class will be
                    used by the thread that announces its liveliness periodically.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the
                        watchdog thread. Only priorities that are supported by the
                        underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by
                        the watchdog thread. The user may need the appropriate privileges from
                        the underlying operating system to be able to assign some of the
                        privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="General" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element contains general parameters that concern the networking service
                as a whole.
            ]]></comment>
            <leafString name="NetworkInterfaceAddress" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies which network interface card should be used.
                    Every Networking service is bound to only one network interface card
                    (NIC). The card can be uniquely identified by its corresponding
                    IP address or by its symbolic name (e.g. eth0). If the
                    value "first available" is entered here, the OpenSplice
                    middleware will try to look up an interface that has 
                    the required capabilities.
                 ]]></comment>
                <maxLength>15</maxLength>
                <default>first available</default>
            </leafString>
            <element name="Reconnection" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                     This element specifies the behavior for the network service
                     w.r.t. other network services re-connecting after being 
                     disconnected for a while. 
                ]]></comment>
                <attributeBoolean name="allowed" required="true">
                    <comment><![CDATA[
                    This attribute specifies whether the network service must
                    resume communication with an other network service when it
                    has already been seen before but has been disconnected 
                    for a while.
                    <ul>
                        <li>false - Specifies that the network service must NOT 
                        resume communication. 
                        (default).  
                        <li>true -  Specifies that the network service must
                        resume communication.
                    </ul>
                    ]]></comment>
                    <default>false</default>
                </attributeBoolean>
            </element>
        </element>
            <element name="Partitioning" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                <p>The OpenSplice Networking service is capable of leveraging
                the network's multicast and routing capabilities. If some a-priori
                knowledge about the participating
                nodes and their topic and partition interest is available, then the
                networking services in the system can be explicitly instructed to use
                specific unicast or multicast addresses for its networking traffic.
                This is done by means of so-called network partitions</p>
                <p>A network partition is defined by one or more unicast, multicast
                of broadcast IP addresses. Any networking service that is started
                will read the network partition settings and, if applicable, join
                the required multicast groups. For every sample distributed by the
                networking service, both its partition and topic name will be
                inspected. In combination with a set of network partition mapping rules,
                the service will determine to which network partition the sample is
                written. The mapping rules are configurable as well.</p>
                <p>Using 
                networking configuration, nodes can be disconnected from any
                networking partition. If a node is connected via a low speed
                interface, it is not capable of receiving high volume data. If
                the DCPS partitioning is designed carefully, high volume data is
                published into a specific partition, which on its turn is mapped
                onto a specific networking partition, which on its turn is only
                connected to those nodes that are capable of handling high volume data.</p>
            ]]></comment>
            <element name="GlobalPartition" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the global or default networking partition.
                ]]></comment>
                <attributeString name="Address" required="true">
                    <comment><![CDATA[
                        The global 
                        networking partition transports data that is either meant
                        to be global, like discovery heartbeats, or that is not
                        mapped onto any other networking partition. The address is a list
                        of one or more unicast, multicast or broadcast addresses. If more
                        than one address is specified, then the different
                        addresses are separated by a colon (,) semicolon (;) or space ( ).
                        Samples for the global partition will be sent to all addresses
                        that are specified in this list of addresses. To specify the
                        default broadcast address, use the expression "broadcast".
                        Addresses can be entered as dotted decimal notation or as the
                        symbolic hostname, in which case the middleware will try to resolve
                        the corresponding IP address.
                    ]]></comment>
                    <default>broadcast</default>
                    <maxLength>0</maxLength>
                </attributeString>
            </element>
            <element name="NetworkPartitions" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    Networking configuration can contain a set of networking partitions,
                    which are grouped under the NetworkPartitions element.
                ]]></comment>
                <element name="NetworkPartition" minOccurrences="1" maxOccurrences="0">
                    <comment><![CDATA[
                        Every NetworkPartition has a name, an address and a connected flag.
                    ]]></comment>
                    <attributeString name="Name" required="false">
                        <comment><![CDATA[
                            A networking partition is uniquely identified by its name.
                        ]]></comment>
                        <default>networkPartition</default>
                        <maxLength>0</maxLength>
                    </attributeString>
                    <attributeString name="Address" required="true">
                        <comment><![CDATA[
                            The address is a list
                            of one or more unicast, multicast or broadcast addresses. If more
                            than one address is specified, then the different
                            addresses are separated by a colon (,) semicolon (;) or space ( ).
                            Samples for this network partition will be sent to all addresses
                            that are specified in this list of addresses. To specify the
                            default broadcast address, use the expression "broadcast".
                            Addresses can be entered as dotted decimal notation or as the
                            symbolic hostname, in which case the middleware will try to
                            resolve the corresponding IP address.
                        ]]></comment>
                        <default>broadcast</default>
                        <maxLength>0</maxLength>
                    </attributeString>
                    <attributeBoolean name="Connected" required="true">
                        <comment><![CDATA[
                            <p>A node can choose to be not connected to a networking
                            partition by setting the Connected attribute.</p>
                            <p>If a node is connected to a networking partition,
                            it will join the corresponding multicast group and
                            it will receive data distributed over the partition.
                            If it is not connected, data distributed over the
                            partition will not reach the node but will be
                            filtered by the networking interface or multicast
                            enabled switches.</p>
                        ]]></comment>
                        <default>true</default>
                    </attributeBoolean>
                    <attributeBoolean name="Compression" required="false">
                        <comment><![CDATA[
                            This attribute specifies if networking will apply 
                            compression to limit bandwidth for a specific 
                            network partition. This provides great flexibility 
                            as network partition are dynamically bind to 
                            logical partitions. The following compression 
                            values are allowed:
                            <ul>
                                <li>false - No compression is applied. This is 
                                also the default value if not specified.</li>
                                <li>true - Compression is applicable</li>
                            </ul>
                        ]]></comment>
                        <default>false</default>
                    </attributeBoolean>
                </element>
            </element>
            <element name="IgnoredPartitions" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element is used to group the set of IgnoredPartition elements.
                ]]></comment>
                <element name="IgnoredPartition" minOccurrences="1" maxOccurrences="0">
                    <comment><![CDATA[
                        This element can be used to create a "Local Partition" that is only
                        available on the node on which it is specified, and therefore won't
                        generate network-load. Any DCPS partition-topic combination specified
                        in this element will not be distibuted by the Networking service.
                    ]]></comment>
                    <attributeString name="DCPSPartitionTopic" required="true">
                        <comment><![CDATA[
                            The Networking service will match any DCPS messages
                            to the DCPSPartitionTopic expression and determine
                            if it matches. The PartitionExpression and
                            TopicExpression are allowed to contain a '*' wildcard,
                            meaning that anything matches. An exact match is
                            considered better than a wildcard match. If a DCPS messages
                            matches an expression it will not be send to the network.
                        ]]></comment>
                        <default>*.*</default>
                        <maxLength>0</maxLength>
                    </attributeString>
                </element>
            </element>
            <element name="PartitionMappings" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element is used to group the set of PartitionMapping elements.
                ]]></comment>
                <element name="PartitionMapping" minOccurrences="1" maxOccurrences="0">
                    <comment><![CDATA[
                        <p>This element specifies a mapping between a network partition
                        and a partition-topic combination.</p>
                        <p>In order to give networking partitions a meaning in the context
                        of DCPS, mappings from DCPS partitions and topics onto networking
                        partitions should be defined. Networking allows for a set of
                        partition mappings to be defined.</p>
                    ]]></comment>
                    <attributeString name="NetworkPartition" required="true">
                        <comment><![CDATA[
                            The NetworkPartition attribute of a partition mapping
                            defines that networking partitition that data in a
                            specific DCPS partition of a specific DCPS topic
                            should be sent to.
                        ]]></comment>
                        <default>networkPartition</default>
                        <maxLength>0</maxLength>
                    </attributeString>
                    <attributeString name="DCPSPartitionTopic" required="true">
                        <comment><![CDATA[
                            The Networking service will match any DCPS messages
                            to the DCPSPartitionTopic expression and determine
                            if it matches. The PartitionExpression and
                            TopicExpression are allowed to contain a '*' wildcard,
                            meaning that anything matches. An exact match is
                            considered better than a wildcard match. For every
                            DCPS message, the best matching partition is determined
                            and the data is sent over the corresponding networking
                            partition as specified by the matching
                            <i>NetworkPartition</i> element.
                        ]]></comment>
                        <default>*.*</default>
                        <maxLength>0</maxLength>
                    </attributeString>
                </element>
            </element>
        </element>
        <element name="Channels" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                <p>This element is used to group a set of Channels.</p>
                <p>The set of channels define the behaviour of the 'network' concerning
                aspects as priority, reliability and latency budget. By configuring
                a set of channels, the Networking service is able to function as a
                'scheduler' for the network bandwidth. It achieves this by using the
                application-defined DDS QoS policies of the data to select the most
                appropriate channel to send the data.</p>
            ]]></comment>
            <element name="Channel" minOccurrences="1" maxOccurrences="42">
                <comment><![CDATA[
                    <p>This element specifies all properties of an individual Channel.</p>
                    <p>The Networking service will make sure messages with a higher
                    priority precede messages with a lower priority and it uses the
                    latency budget to assemble multiple messages into one UDP packet
                    where possible, to optimize the bandwidth usage. Of course, its
                    performance depends heavily on the compatbility of the configured
                    channels with the used DDS QoS policies of the applications.</p>
                ]]></comment>
                <attributeString name="name" required="true">
                    <comment><![CDATA[
                        The name uniquely identifies the channel.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>aChannel</default>
                </attributeString>
                <attributeBoolean name="reliable" required="true">
                    <comment><![CDATA[
                        <p>If this attribute is set to true, the channel sends all messages reliably.
                        If not, data is sent only once (fire-and-forget).</p>
                        <p>The specific channel a message is written into depends on the attached
                        quality of service. Once a message has arrived in a channel, it will be
                        transported with the quality of service attached to the channel. If the
                        reliable attribute happens to be set to true, the message will be sent
                        over the network using a reliability protocol.</p>
                    ]]></comment>
                    <default>false</default>
                </attributeBoolean>
                <attributeBoolean name="default" required="false">
                    <comment><![CDATA[
                        <p>This attribute indicates whether the channel is selected as the
                        default channel in case no channel offers the quality of service
                        requested by a message.</p>
                        <p>The networking channels should be configured corresponding
                        to the quality of service settings that are expected to be
                        requested by the applications. It might happen, however,
                        that none of the available channels meets the requested
                        quality of service for a specific message. In that case,
                        the message will be written into the default channel.</p>
                        <p>Note that only one channel is allowed to have this attribute
                        set to true</p>
                    ]]></comment>
                    <default>false</default>
                </attributeBoolean>
                <attributeBoolean name="enabled" required="true">
                    <comment><![CDATA[
                        This attribute toggles a channel on or off. Toggling a
                        channel between enabled and disabled is a quick alternative
                        for commenting out the corresponding lines in the configuration
                        file.
                    ]]></comment>
                    <default>false</default>
                </attributeBoolean>
                <attributeInt name="priority" required="false">
                    <comment><![CDATA[
                        This attribute sets the transport priority of the channel.
                        Messages sent to the network have a transport_priority
                        quality of service value. Selection of a networking channel
                        is based on the priority requested by the message and the
                        priority offered by the channel. The priority settings
                        of the different channels divide the priority range
                        into intervals. Within a channel, messages are sorted in
                        order of priority.
                    ]]></comment>
                    <default>0</default>
                </attributeInt>
                <leafInt name="PortNr" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the port number used by the Channel.
                        Messages for the channel are sent to the port number given.
                        Each channel needs its own unique port number. Please note
                        that 'reliable' channels use a second port, which is the
                        specified PortNr + 1.
                    ]]></comment>
                    <minimum>1</minimum>
                    <maximum>65535</maximum>
                    <default>3367</default>
                </leafInt>
                <leafInt name="FragmentSize" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        The networking module will fragment large message into smaller
                        fragments with size <b>FragmentSize</b>. These fragments
                        are sent as datagrams to the UDP stack. OS-settings determine
                        the maximum datagram size.
                    ]]></comment>
                    <minimum>200</minimum>
                    <maximum>65535</maximum>
                    <default>1300</default>
                </leafInt>
                <leafInt name="Resolution" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        <p>The resolution indicates the number of milliseconds that
                        this channel sleeps between two consecutive resend or
                        packing actions. Latency budget values are truncated to a
                        multiple of "Resolution" milliseconds.</p>
                        <p>It is considered good practice to specify the ThrottleTreshold consistently throughout
                        the system.</p>
                    ]]></comment>
                    <minimum>1</minimum>
                    <default>10</default>
                </leafInt>
                <leafInt name="AdminQueueSize" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        <p>For reliable channels the receiving side needs to keep the sending
                        side informed about the received data and the received control messages.</p>
                        <p>This is done by means of an "AdminQueue". This setting determines the
                        size of this queue, and it must be greater than the maximum number of reliable
                        messages send or received during each "Resolution" milliseconds.</p>
                    ]]></comment>
                    <minimum>400</minimum>
                    <default>4000</default>
                </leafInt>
                <element name="Sending" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element describes all properties for the transmitting side
                        of the Channel.
                    ]]></comment>
                    <leafBoolean name="CrcCheck" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                       In order to protect OpenSplice network packets from malicious attack the CrcCheck(cyclic redundancy check) configuration item has been added. 
                       CRCs are specifically designed to protect against common types of errors on communication channels.
                       When enabled the integrity of delivered network packets from one DDS process to another is assured.
                       There is a small performance cost using this feature due to the addtional overhead of carrying out the crc calculation.
                    
                       When the sending side is enabled the network packet will contain a valid crc field. 
                    ]]></comment>
                    <default>false</default>
                    </leafBoolean>
                    <leafInt name="QueueSize" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the number of messages the networking queue
                            can contain.
                            Messages sent to the network are written into the networking queue.
                            The networking service will read from this queue. If this
                            queue is full, the writer writing into the queue is suspended
                            and will retry until success. Note that a full networking queue is
                            a symptom of an improperly designed system.
                        ]]></comment>
                        <minimum>1</minimum>
                        <default>400</default>
                    </leafInt>
                    <leafInt name="MaxBurstSize" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            Amount in bytes to be sent at maximum every
                            "Resolution" milliseconds.
                        ]]></comment>
                        <minimum>1024</minimum>
                        <default>200000</default>
                    </leafInt>
                    <leafInt name="ThrottleLimit" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            Throttling will enable you to further limit (below MaxBurstSize) the amount of data that is
                            sent every Resolution interval. This happens if one of the receiving nodes in the network
                            indicates that it has trouble processing all incoming data. This value is the lower boundary
                            of the range over which the throttling can adapt the limit. If this value is set to the same
                            value (or higher) as MaxBurstSize throttling is disabled.
                        ]]></comment>
                        <minimum>128</minimum>
                        <default>10240</default>
                    </leafInt>
                    <leafInt name="ThrottleThreshold" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            <p>This is the number of unprocessed network fragments that a node will store before it will inform
                            the other nodes in the network that it has trouble processing the incoming data. Those other nodes
                            can use this information to adjust their throttle values, effectively reducing the amount of incoming
                            data in case of a temporary overflow, and increasing again when the node is able to catch up.</p>
                            <p>It is considered good practice to specify the ThrottleTreshold consistently throughout
                            the system.</p>
                        ]]></comment>
                        <minimum>2</minimum>
                        <default>50</default>
                    </leafInt>
                    <leafInt name="MaxRetries" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            The number of retransmissions the service has to execute before considering the addressed node
                            as not responding.
                        ]]></comment>
                        <minimum>1</minimum>
                        <default>100</default>
                    </leafInt>
                    <leafInt name="RecoveryFactor" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[A lost message is resent after Resolution * RecoveryFactor milliseconds.]]></comment>
                        <minimum>2</minimum>
                        <default>3</default>
                    </leafInt>
                    <leafInt name="DiffServField" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                        This element describes the DiffServ setting the channel will apply to all its
                        networking messages.
                        ]]></comment>
                        <minimum>0</minimum>
                        <maximum>255</maximum>
                        <default>0</default>
                    </leafInt>
                    <leafEnum name="DontRoute" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[The IP DONTROUTE
                              socket option is set to the value specified.]]></comment>
                        <value>True</value>
                        <value>False</value>
                        <default>True</default>
                    </leafEnum>
                    <leafInt name="TimeToLive" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[For each UDP packet sent out, the IP Time To Live
                              header value is set to the value specified.]]></comment>
                        <minimum>0</minimum>
                        <maximum>255</maximum>
                        <default>0</default>
                    </leafInt>
                    <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the scheduling policies used to control the transmitter
                            thread of the current Channel.
                        ]]></comment>
                        <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                            <comment><![CDATA[
                                This element specifies the thread priority that will be used by the transmitter
                                thread. Only priorities that are supported by the underlying operating system
                                can be assigned to this element. The user may need special privileges from the
                                underlying operating system to be able to assign some of the privileged priorities.
                            ]]></comment>
                            <default>0</default>
                            <attributeEnum name="priority_kind" required="false">
                                <comment><![CDATA[
                                    This attribute specifies whether the specified
                                    <i>Priority</i> is a relative or absolute priority.
                                ]]></comment>
                                <value>Relative</value>
                                <value>Absolute</value>
                                <default>Relative</default>
                            </attributeEnum>
                        </leafInt>
                        <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                            <comment><![CDATA[
                                This element specifies the thread scheduling class that will be used by the transmitter
                                thread. The user may need the appropriate privileges from the underlying operating system
                                to be able to assign some of the privileged scheduling classes.
                            ]]></comment>
                            <value>Timeshare</value>
                            <value>Realtime</value>
                            <value>Default</value>
                            <default>Default</default>
                        </leafEnum>
                    </element>
                </element>
                <element name="Receiving" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element describes all properties for the receiving side
                        of the Channel.
                    ]]></comment>
                    <leafBoolean name="CrcCheck" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                       In order to protect OpenSplice network packets from malicious attack the CrcCheck(cyclic redundancy check) configuration item has been added. 
                       CRCs are specifically designed to protect against common types of errors on communication channels.
                       When enabled the integrity of delivered network packets from one DDS process to another is assured.
                       There is a small performance cost using this feature due to the addtional overhead of carrying out the crc calculation.
                    
                       When the receiving side is enabled only network packets that contain a valid crc field are accepted.  
                    ]]></comment>
                    <default>false</default>
                    </leafBoolean>
                    <leafInt name="ReceiveBufferSize" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            The UDP receive buffer of the best effort channel socket is
                            set to the value given. If many message are lost, the
                            receive buffer size has to be increased. Best effort is
                            currently the only channel available.
                        ]]></comment>
                        <minimum>1024</minimum>
                        <default>1000000</default>
                    </leafInt>
                    <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the scheduling policies used to control the
                            receiver thread of the current Channel.
                        ]]></comment>
                        <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                            <comment><![CDATA[
                                This element specifies the thread priority that will be used by the receiver
                                thread. Only priorities that are supported by the underlying operating system
                                can be assigned to this element. The user may need special privileges from
                                the underlying operating system to be able to assign some of the privileged
                                priorities.
                            ]]></comment>
                            <default>0</default>
                            <attributeEnum name="priority_kind" required="false">
                                <comment><![CDATA[
                                    This attribute specifies whether the specified
                                    <i>Priority</i> is a relative or absolute priority.
                                ]]></comment>
                                <value>Relative</value>
                                <value>Absolute</value>
                                <default>Relative</default>
                            </attributeEnum>
                        </leafInt>
                        <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                            <comment><![CDATA[
                                This element specifies the thread scheduling class that will be used by the receiver
                                thread. The user may need the appropriate privileges from the underlying operating
                                system to be able to assign some of the privileged scheduling classes.
                            ]]></comment>
                            <value>Timeshare</value>
                            <value>Realtime</value>
                            <value>Default</value>
                            <default>Default</default>
                        </leafEnum>
                    </element>
                    <leafInt name="DefragBufferSize" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            The maximum number of Fragment buffers that will be allocated for
                            this channel. These buffers are used to store incoming fragments
                            waiting to be processed, as well as fragments that are being processed.
                        ]]></comment>
                        <minimum>500</minimum>
                        <default>5000</default>
                    </leafInt>
                    <element name="SMPOptimization" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This option will distribute the processing done for incoming fragements over
                            multiple threads, which will lead to an improved throughput on SMP nodes.
                        ]]></comment>
                        <attributeBoolean name="enabled" required="true">
                            <comment><![CDATA[
                                This attribute toggles the Optimization on or off.
                            ]]></comment>
                            <default>true</default>
                        </attributeBoolean>
                    </element>
                    <leafInt name="MaxReliabBacklog" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                            This is a lower limit to the DefragBufferSize that specifies the number of received fragments
                            from a single remote node allocated for the purpose of order preservation because an earlier
                            fragment from that remote node is missing. If this number is exceeded, then that particular
                            remote node that didn't resend the missing fragent in time is considered dead for this channel.
                        ]]></comment>
                        <minimum>100</minimum>
                        <default>1000</default>
                    </leafInt>
                </element>
            </element>
        </element>
        <element name="Discovery" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element is used to configure the various parameters of the Discovery Channel,
                which is used to discover all participating entities in the current Domain.
            ]]></comment>
            <attributeBoolean name="enabled" required="true">
                    <comment><![CDATA[
                    This attribute can be used to enable or disable the Discovery Channel. In case the Discovery
                    Channel is disabled, entities will only detect each others presence implicitly once messages
                    are received for the first time.
                    ]]></comment>
                    <default>true</default>
            </attributeBoolean>
            <leafInt name="PortNr" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the Port number used by the Discovery Channel.
                ]]></comment>
                <minimum>1</minimum>
                <maximum>65536</maximum>
                <default>3369</default>
            </leafInt>
            <element name="Sending" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element describes all properties for the transmitting side
                    of the Discovery Channel.
                ]]></comment>
                <leafInt name="DiffServField" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[
                        This element describes the DiffServ setting Discovery will apply to all its
                        networking messages.
                        ]]></comment>
                        <minimum>0</minimum>
                        <maximum>255</maximum>
                        <default>0</default>
                    </leafInt>
                    <leafEnum name="DontRoute" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[The IP DONTROUTE
                              socket option is set to the value specified.]]></comment>
                        <value>True</value>
                        <value>False</value>
                        <default>True</default>
                    </leafEnum>
                    <leafInt name="TimeToLive" minOccurrences="0" maxOccurrences="1">
                        <comment><![CDATA[For each UDP packet sent out, the IP Time To Live
                              header value is set to the value specified.]]></comment>
                        <minimum>0</minimum>
                        <maximum>255</maximum>
                        <default>0</default>
                    </leafInt>
                    <leafBoolean name="CrcCheck" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                       In order to protect OpenSplice network packets from malicious attack the CrcCheck(cyclic redundancy check) configuration item has been added. 
                       CRCs are specifically designed to protect against common types of errors on communication channels.
                       When enabled the integrity of delivered network packets from one DDS process to another is assured.
                       There is a small performance cost using this feature due to the addtional overhead of carrying out the crc calculation.
                    
                       When the sending side is enabled the network packet will contain a valid crc field. 
                    ]]></comment>
                    <default>false</default>
                    </leafBoolean>
                <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the scheduling policies used to control the transmitter thread
                        of the Discovery Channel.
                    ]]></comment>
                    <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread priority that will be used by the transmitter thread
                            of the Discovery Channel. Only priorities that are supported by the underlying operating
                            system can be assigned to this element. The user may need special privileges from the
                            underlying operating system to be able to assign some of the privileged priorities.
                        ]]></comment>
                        <default>0</default>
                        <attributeEnum name="priority_kind" required="false">
                            <comment><![CDATA[
                                This attribute specifies whether the specified
                                <i>Priority</i> is a relative or absolute priority.
                            ]]></comment>
                            <value>Relative</value>
                            <value>Absolute</value>
                            <default>Relative</default>
                        </attributeEnum>
                    </leafInt>
                    <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread scheduling class that will be used by the transmitter
                            thread of the Discovery Channel. The user may need the appropriate privileges from the
                            underlying operating system to be able to assign some of the privileged scheduling classes.
                        ]]></comment>
                        <value>Timeshare</value>
                        <value>Realtime</value>
                        <value>Default</value>
                        <default>Default</default>
                    </leafEnum>
                </element>
                <leafInt name="Interval" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        No description.
                    ]]></comment>
                    <minimum>100</minimum>
                    <default>333</default>
                </leafInt>
                <leafFloat name="SafetyFactor" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        The SafetyFactor is used to set a margin on the discovery sending. This avoids tight timing issues.
                    ]]></comment>
                    <minimum>0.2</minimum>
                    <maximum>1.0</maximum>
                    <default>0.9</default>
                </leafFloat>
                <leafInt name="SalvoSize" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        During starting and stopping, discovery messages are sent at higher frequency. This SalvoSize sets
                        the number of messages to send during these phases.
                    ]]></comment>
                    <minimum>1</minimum>
                    <default>3</default>
                </leafInt>
            </element>
            <element name="Receiving" minOccurrences="0" maxOccurrences="1">
                <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the scheduling policies used to control the receiver thread
                        of the Discovery Channel.
                    ]]></comment>
                    <leafBoolean name="CrcCheck" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                       In order to protect OpenSplice network packets from malicious attack the CrcCheck(cyclic redundancy check) configuration item has been added. 
                       CRCs are specifically designed to protect against common types of errors on communication channels.
                       When enabled the integrity of delivered network packets from one DDS process to another is assured.
                       There is a small performance cost using this feature due to the addtional overhead of carrying out the crc calculation.
                    
                       When the receiving side is enabled only network packets that contain a valid crc field are accepted.  
                    ]]></comment>
                    <default>false</default>
                    </leafBoolean>
                    <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread priority that will be used by the receiver thread
                            of the Discovery Channel. Only priorities that are supported by the underlying operating
                            system can be assigned to this element. The user may need special privileges from the
                            underlying operating system to be able to assign some of the privileged priorities.
                        ]]></comment>
                        <default>0</default>
                        <attributeEnum name="priority_kind" required="false">
                            <comment><![CDATA[
                                This attribute specifies whether the specified
                                <i>Priority</i> is a relative or absolute priority.
                            ]]></comment>
                            <value>Relative</value>
                            <value>Absolute</value>
                            <default>Relative</default>
                        </attributeEnum>
                    </leafInt>
                    <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                        <comment><![CDATA[
                            This element specifies the thread scheduling class that will be used by the receiver
                            thread of the Discovery Channel. The user may need the appropriate privileges from the
                            underlying operating system to be able to assign some of the privileged scheduling classes.
                        ]]></comment>
                        <value>Timeshare</value>
                        <value>Realtime</value>
                        <value>Default</value>
                        <default>Default</default>
                    </leafEnum>
                </element>
                <leafInt name="DeathDetectionCount" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        No description.
                    ]]></comment>
                    <minimum>1</minimum>
                    <default>6</default>
                </leafInt>
                <leafInt name="ReceiveBufferSize" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        The UDP receive buffer of the Discovery Channel socket is set to the value given. If
                        many message are lost, the receive buffer size has to be increased.
                    ]]></comment>
                    <minimum>1</minimum>
                    <default>1000000</default>
                </leafInt>
            </element>
        </element>

        <element name="Tracing" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element controls the amount and type of information that is written into the
                tracing log by the Networking Service. This is useful to track the Networking Service
                during application development. In the runtime system it should be turned off.
            ]]></comment>
            <leafString name="OutputFile" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This option specifies where the logging is printed to. Note that “stdout” is considered a
                    legal value that represents “standard out”.  The default value is an empty string,
                    indicating that the tracing log will be written to standard out.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>networking.log</default>
            </leafString>
            <leafBoolean name="Timestamps" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies whether the logging must contain timestamps.
                ]]></comment>
                <attributeBoolean name="absolute" required="false">
                    <comment><![CDATA[
                        This attribute specifies whether the timestamps are absolute
                        or relative to the startup time of the service.
                    ]]></comment>
                    <default>true</default>
                </attributeBoolean>
                <default>true</default>
            </leafBoolean>
            <element name="Categories" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element contains the logging properties for various networking categories.
                ]]></comment>
                <leafInt name="Default" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level used for categories that are not
                        explicitly specified. Level 0 indicates no tracing, level 6 indicates the
                        most detailed level of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Configuration" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Configuration</i> category.
                        This includes the processing of all NetworkService parameters in the config file.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Construction" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Construction</i> category.
                        This includes the creation of all internal processing entities.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Destruction" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Destruction</i> category.
                        This includes the destruction of all internal processing entities when the
                        NetworkService terminates. Level 0 indicates no tracing, level 6 indicates the
                        most detailed level of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Mainloop" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Mainloop</i> category.
                        This includes information about each of the threads spawned by the NetworkService.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Groups" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Groups</i> category.
                        This includes the management of local groups (partition-topic combinations).
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Send" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Send</i> category.
                        This includes information about outgoing data.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Receive" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Receive</i> category.
                        This includes information about incoming data.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Test" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Test</i> category.
                        This is a reserved category used for testing purposes.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>
                <leafInt name="Discovery" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the tracing level for the <i>Discovery</i> category.
                        This includes all activity related to the discovery channel.
                        Level 0 indicates no tracing, level 6 indicates the most detailed level
                        of tracing.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>6</maximum>
                    <default>0</default>
                </leafInt>

            </element>
        </element>
    </element>

    <element name="DDSIService" minOccurrences="0" maxOccurrences="0">
        <comment><![CDATA[
            The DDSI Networking configuration expects a root element named
            OpenSplice/DDSIService. Within this root element, the networking
            daemon will look for several child-elements.
        ]]></comment>
        <attributeString name="name" required="true">
            <comment><![CDATA[
                This attribute identifies the configuration for the DDSI
                Networking Service. Multiple Networking Service configurations
                can be specified in one single resource. The actual applicable
                configuration is determined by the value of the name attribute,
                which must match the specified under the element
                OpenSplice/Domain/Service[@name] in the Domain Service configuration.
            ]]></comment>
            <maxLength>0</maxLength>
            <default>ddsi</default>
        </attributeString>
        <element name="General" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                The General element describes the networking service as a whole.
            ]]></comment>
            <leafString name="NetworkInterfaceAddress" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies which network interface card should
                    be used.
                    Every DDSI Networking Service is bound to only one network
                    interface card (NIC). The card can be uniquely identified by
                    its corresponding IP address. If the value "first available"
                    is entered here, the OpenSplice middleware will try to look
                    up an interface that has the required capabilities.
                ]]></comment>
                <maxLength>15</maxLength>
                <default>first available</default>
            </leafString>
        </element>
        <element name="Channels" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                The set of channels defines the behaviour of the service
                concerning priority. By configuring a set of channels, the
                DDSI Networking Service is able to function as a ‘scheduler’
                for the network bandwidth. It achieves this by using the
                application-defined DDS QoS policies of the data to select
                the most appropriate channel to send the data.
            ]]></comment>
            <element name="Channel" minOccurrences="0" maxOccurrences="0">
                <comment><![CDATA[
                    The DDSI Networking Service will make sure messages with a
                    higher priority precede messages with a lower priority.
                ]]></comment>
                <attributeString name="name" required="true">
                    <comment><![CDATA[
                        This element uniquely identifies the channel.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>channel1</default>
                </attributeString>
                <attributeLong name="priority" required="false">
                    <comment><![CDATA[
                        This attribute sets the transport priority of the channel.
                        Messages sent to the network have a transport_priority
                        quality of service value. Selection of a networking
                        channel is based on the priority requested by the
                        message and the priority offered by the channel. The
                        priority settings of the different channels divide the
                        priority range into intervals. Within a channel,
                        messages are sorted in order of priority.
                        Please note that this priority element does not have
                        any relation to the operating system threading priority.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>1000</maximum>
                    <default>0</default>
                 </attributeLong>
                <attributeBoolean name="enabled" required="false">
                    <comment><![CDATA[
                        This attribute toggles a channel on or off.
                        Toggling a channel between enabled and disabled is a
                        quick alternative for commenting out the corresponding
                        lines in the configuration file.
                    ]]></comment>
                    <default>true</default>
                </attributeBoolean>
                <attributeBoolean name="default" required="false">
                    <comment><![CDATA[
                        This attribute indicates whether the channel is used as
                        the default channel in case no other channel offers the
                        quality of service requested by a message.
                        The networking channels should be configured to match the
                        quality of service settings that are expected to be
                        requested by the applications. It might happen, however,
                        that none of the available channels meets the requested
                        quality of service for a specific message. In that case,
                        the message will be written into the default channel.
                    ]]></comment>
                    <default>false</default>
                </attributeBoolean>
                <leafInt name="GroupQueueSize" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element defines the length of queue user by the
                        network database reader.
                    ]]></comment>
                    <minimum>100</minimum>
                    <maximum>10000</maximum>
                    <default>500</default>
                </leafInt>
                <leafInt name="FragmentSize" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        This element defines the length of data fragments sent
                        by this channel.
                    ]]></comment>
                    <minimum>100</minimum>
                    <maximum>10000</maximum>
                    <default>1200</default>
                </leafInt>
                <leafInt name="PortNr" minOccurrences="0" maxOccurrences="1">
                    <comment><![CDATA[
                        Messages for the channel are sent to the given port number.
                        Each channel needs its own unique port number.
                    ]]></comment>
                    <minimum>0</minimum>
                    <maximum>65535</maximum>
                    <default>53370</default>
                </leafInt>
            </element>
        </element>
        <element name="Discovery" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                The Discovery Channel is used to discover all participating
                entities in the current domain. This element is used to
                configure the various parameters of the Discovery Channel.
            ]]></comment>
            <attributeBoolean name="enabled" required="false">
                <comment><![CDATA[
                    This attribute toggles Discovery on or off.
                ]]></comment>
                <default>true</default>
            </attributeBoolean>
            <leafInt name="PortNr" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the port number used by the Discovery
                    Channel.
                ]]></comment>
                <minimum>0</minimum>
                <maximum>65535</maximum>
                <default>7400</default>
            </leafInt>
            <leafInt name="FragmentSize" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element defines the length of data fragments sent by
                    this channel.
                ]]></comment>
                <minimum>100</minimum>
                <maximum>10000</maximum>
                <default>1200</default>
            </leafInt>
        </element>
        <element name="Tracing" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element controls the amount and type of information that is
                written into the tracing log by the DDSI service. This is useful
                to track the DDSI service during application development. In the
                runtime system it should be turned off.
            ]]></comment>
            <attributeBoolean name="enabled" required="false">
                <comment><![CDATA[
                    This attribute toggles tracing on or off.
                ]]></comment>
                <default>false</default>
            </attributeBoolean>
            <leafString name="OutputFile" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This option specifies where the logging is printed to.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>ddsi-tracing-output.log</default>
            </leafString>
        </element>
        <element name="Partitioning" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element defines the default partition being used for all
                data, except the data items being delivered using an dedicated
                network partition (support for dedicated Network Partitions will
                be available in later releases).
                The OpenSplice DDSI Networking Service can be configured to use
                static routing via dedicated multicast capabilities. This
                requires the underlying operating system and network interfaces
                to be configured properly.
                The multicast mechanism can be considered a simple implementation
                of the publish and subscribe technique. The DDSI Networking
                Service can be configured to make use of this by mapping DCPS
                partitions onto multicast addresses (networking partitions).
                Every node is aware of all networking partitions. Using networking
                configuration, nodes can be disconnected from any networking
                partition. If a node is connected via a low speed interface,
                it is not capable of receiving high volume data. If the DCPS
                partitioning is designed carefully, high volume data is published
                into a specific partition, which is mapped onto a specific
                networking partition, which in turn is only connected to those
                nodes that are capable of handling high volume data.
            ]]></comment>
            <element name="GlobalPartition" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This Element defines global or default networking partition.
                ]]></comment>
                <attributeString name="Address" required="false">
                    <comment><![CDATA[
                        This element identifies the global partition address.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>239.255.0.1</default>
                </attributeString>
            </element>
        </element>
    </element>

    <element name="TunerService" minOccurrences="0" maxOccurrences="0">
        <comment><![CDATA[
            The purpose of the control & monitoring SOAP service is to provide
            remote access to the node for OpenSplice tooling.
        ]]></comment>
        <attributeString name="name" required="true">
            <comment><![CDATA[
                This attribute identifies a configuration for the Tuner Service by name.
                Multiple Tuner Service configurations can be specified in one single
                resource file. The actual applicable configuration is determined by the
                value of the <i>name</i> attribute, which must match the one specified
                under the <i>OpenSplice/Domain/Service[@name]</i> in the configuration of
                the Domain Service.
            ]]></comment>
            <default>cmsoap</default>
            <maxLength>0</maxLength>
        </attributeString>
        <element name="Watchdog" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element controls the characteristics of the Watchdog thread.
            ]]></comment>
            <element name="Scheduling" minOccurrences="1" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the type of OS scheduling class will be
                    used by the thread that announces its liveliness periodically.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the
                        watchdog thread. Only priorities that are supported by the
                        underlying operating system can be assigned to this element.
                        The user may need special privileges from the underlying operating
                        system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified
                            Priority is a relative or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by
                        the watchdog thread. The user may need the appropriate privileges from
                        the underlying operating system to be able to assign some of the
                        privileged scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="Server" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element determines the serverside behaviour of the Tuner service.
            ]]></comment>
            <leafInt name="PortNr" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element determines the port number that the TunerService
                    will use to listen for incoming requests. This port number
                    must also be used by the Tuner tool to connect to this service.
                ]]></comment>
                <minimum>1</minimum>
                <maximum>65535</maximum>
                <default>8000</default>
            </leafInt>
            <leafInt name="Backlog" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the maximum number of client requests
                    that are allowed to be waiting when the maximum number of
                    concurrent requests is reached.
                ]]></comment>
                <minimum>0</minimum>
                <default>5</default>
            </leafInt>
            <leafEnum name="Verbosity" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the verbosity level of the logging of the service.
                ]]></comment>
                <value>0</value>
                <value>1</value>
                <value>2</value>
                <value>3</value>
                <value>4</value>
                <value>5</value>
                <default>0</default>
            </leafEnum>
        </element>
        <element name="Client" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element determines how the Tuner service handles the
                incoming client connections.
            ]]></comment>
            <leafInt name="MaxClients" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element determines the maximum allowed number of clients
                    that are allowed to be concurrently connected to the Tuner
                    service. Clients are identified by IP-address.
                ]]></comment>
                <minimum>1</minimum>
                <default>2</default>
            </leafInt>
            <leafInt name="MaxThreadsPerClient" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the maximum number of threads that
                    the Tuner service will create for one specific client.
                    The number of threads determines the maximum number of
                    concurrent requests for a client.
                ]]></comment>
                <minimum>1</minimum>
                <default>2</default>
            </leafInt>
            <leafFloat name="LeasePeriod" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element determines the maximum amount of time in which a
                    connected client must update its lease. This can be done
                    implicitly by calling any function or explicitly by calling
                    the update lease function. The Tuner tool will automatically
                    update its lease when it is connected to the Tuner service.
                    This ensures that all resources are cleaned up automatically
                    if the client fails to update its lease within this period.
                ]]></comment>
                <minimum>10.0</minimum>
                <default>15.0</default>
            </leafFloat>
            <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the scheduling policies used to control the threads
                    that handle the client requests to the Tuner Service.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the threads that handle
                        client requests to the Tuner Service. Only priorities that are supported by the underlying
                        operating system can be assigned to this element. The user may need special privileges from
                        the underlying operating system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified <i>Priority</i> is a relative
                            or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by the threads that
                        handle client requests to the Tuner Service. The user may need the appropriate privileges
                        from the underlying operating system to be able to assign some of the privileged scheduling
                        classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="GarbageCollector" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the behaviour of the garbage collection
                thread of the service.
            ]]></comment>
            <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the scheduling policies used to control the garbagage
                    collection thread of the Tuner Service.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the garbage collection
                        thread of the Tuner Service. Only priorities that are supported by the underlying
                        operating system can be assigned to this element. The user may need special privileges from
                        the underlying operating system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified <i>Priority</i> is a relative
                            or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by the garbage
                        collection thread of the Tuner Service. The user may need the appropriate privileges
                        from the underlying operating system to be able to assign some of the privileged
                        scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
        <element name="LeaseManagement" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the behaviour of the lease management
                thread of the Tuner Service.
            ]]></comment>
            <element name="Scheduling" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the scheduling policies used to control the lease
                    management thread of the Tuner Service.
                ]]></comment>
                <leafInt name="Priority" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread priority that will be used by the lease management
                        thread of the Tuner Service. Only priorities that are supported by the underlying
                        operating system can be assigned to this element. The user may need special privileges from
                        the underlying operating system to be able to assign some of the privileged priorities.
                    ]]></comment>
                    <default>0</default>
                    <attributeEnum name="priority_kind" required="false">
                        <comment><![CDATA[
                            This attribute specifies whether the specified <i>Priority</i> is a relative
                            or absolute priority.
                        ]]></comment>
                        <value>Relative</value>
                        <value>Absolute</value>
                        <default>Relative</default>
                    </attributeEnum>
                </leafInt>
                <leafEnum name="Class" minOccurrences="1" maxOccurrences="1">
                    <comment><![CDATA[
                        This element specifies the thread scheduling class that will be used by the lease
                        management thread of the Tuner Service. The user may need the appropriate privileges
                        from the underlying operating system to be able to assign some of the privileged
                        scheduling classes.
                    ]]></comment>
                    <value>Timeshare</value>
                    <value>Realtime</value>
                    <value>Default</value>
                    <default>Default</default>
                </leafEnum>
            </element>
        </element>
    </element>

    <element name="DbmsConnectService" minOccurrences="0" maxOccurrences="0">
           <comment><![CDATA[
               The DbmsConnect Service configuration is responsible for DDS to DBMS bridging
               and expects a root element named <i>OpenSplice/DbmsConnectService</i>. Within
               this root element, the DbmsConnect Service will look for several child-elements.
               Each of these is listed and explained.
           ]]></comment>
        <attributeString name="name" required="true">
            <comment><![CDATA[
                This attribute identifies the configuration for the DBMS connect service by
                name. Multiple DBMS connect service configurations can be specified in one
                single resource file. The actual applicable configuration is determined by
                the value of the name attribute, which must match the one specified under the
                <i>OpenSplice/Domain/Service[@name]</i> in the configuration of
                the DomainService.
            ]]></comment>
            <maxLength>0</maxLength>
            <default>dbmsconnect</default>
        </attributeString>
        <element name="DdsToDbms" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the configuration properties concerning DDS to DBMS bridging.
            ]]></comment>
            <attributeBoolean name="replication_mode" required="false">
                <comment><![CDATA[
                    <p>This attribute specifies the default replication mode for
                    all NameSpaces in the <i>DdsToDbms</i> element.</p>
                    <p>When replicating databases through DDS, the <i>NameSpace</i>
                    elements in the <i>DbmsToDds</i> and <i>DdsToDbms</i> elements
                    map a Table and Topic circularly. To prevent data-modifications
                    from continuously cascading, modifications made by the
                    DBMSConnect service itself should not trigger new updates
                    in the DBMS nor in the DDS.</p>
                    <p>In replication mode, the DBMS-connect service ignores
                    samples that were published by itself. (Currently that means
                    that everything that is published on the same node as the
                    DBMSConnect Service is considered to be of DBMSConnect
                    origin and therefore ignored). That way, replication of
                    changes that were copied from Dbms to DDS back into Dbms
                    is avoided.</p>
                    <p><b>WARNING</b>: This setting does not avoid replication
                    of changes that were copied from DDS to Dbms back into DDS.
                    For that purpose, the <i>replication_user</i> attribute of the
                    <i>DbmsToDds</i> or <i>DbmsToDds/NameSpace</i> elements should
                    be set appropriately as well!</p>
                ]]></comment>
                <default>FALSE</default>
            </attributeBoolean>
            <element name="NameSpace" minOccurrences="1" maxOccurrences="0">
                <comment><![CDATA[
                    This element specifies the responsibilities of the service
                    concerning the bridging of particular data from DDS to DBMS.
                     At least one <i>NameSpace</i> element has to be present in
                     a <i>DdsToDbms</i> element.
                ]]></comment>
                <attributeString name="name" required="false">
                    <comment><![CDATA[
                        The name of the namespace. If not specified, the namespace
                        will be named "(nameless)".
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>(nameless)</default>
                </attributeString>
                <attributeString name="odbc" required="false">
                    <comment><![CDATA[
                        <p>The service dynamically loads an ODBC library at runtime. This attribute
                        specifies the name of the ODBC library to be loaded. Platform specific
                        pre- and postfixes and extensions are automatically added.</p>
                        <p>If this attribute is not provided, the service will attempt to load the
                        generic ODBC library. The resulting behaviour is dependent on the platform
                        on which the DbmsConnect Service is running.</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="partition" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies an expression that represents one or more DDS
                        partitions. It is allowed to use wildcards in the expression: a '*'
                        represents any sequence of characters and a '?' represents one
                        single character.</p>
                        <p>This expression is used to specify the DDS partition(s) from which
                        DDS samples must be 'bridged' to the DBMS domain.</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>*</default>
                </attributeString>
                <attributeString name="topic" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies an expression that represents one or more DDS
                        topic names. It is allowed to use wildcards in the expression: a '*'
                        represents any sequence of characters and a '?' represents one
                        single character.</p>
                        <p>This expression is used to specify the topics from which DDS
                        samples must be ‘bridged’ to the DBMS domain.  For every matching
                        topic encountered in one or more of the specified partitions, it
                        creates a separate table in the DBMS. The table name will match that
                        of the topic, unless specified otherwise in the <i>table</i> attribute
                        of a <i>Mapping</i> element.</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>*</default>
                </attributeString>
                <attributeFloat name="update_frequency" required="false">
                    <comment><![CDATA[
                        This attribute specifies the frequency (in Hz) at which the service
                        will update the DBMS domain with DDS data. By default, it is 0.0Hz
                        which means it is done event based (every time new DDS data arrives).
                    ]]></comment>
                    <minimum>0.0</minimum>
                    <default>0.0</default>
                </attributeFloat>
                <attributeString name="dsn" required="true">
                    <comment><![CDATA[
                        Represents the ODBC Data Source Name, that represents the DBMS where
                        the service must bridge the DDS data to.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="usr" required="true">
                    <comment><![CDATA[
                        Represents the user name that is used when connecting to the DBMS.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="pwd" required="true">
                    <comment><![CDATA[
                        Represents the password that is used when connecting to the DBMS.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="schema" required="false">
                    <comment><![CDATA[
                        Represents the schema that is used when communicating with the DBMS.
                        The exact schema content may be dependent on the DBMS that is being
                        used, so consult your DBMS documentation for more details on this subject.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="catalog" required="false">
                    <comment><![CDATA[
                        Represents the catalog that is used when communicating with the DBMS.
                        The exact catalog content may be dependent on the DBMS that is being
                        used, so consult your DBMS documentation for more details on this subject.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeBoolean name="replication_mode" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies the replication mode for the
                        current <i>NameSpace</i> element. If not specified, the value
                        will be inherited from the <i>replication_mode</i> of the parent
                        <i>DdsToDbms</i> element, which if not explicitly specified
                        defaults to false</p>
                        <p>When replicating databases through DDS, the <i>NameSpace</i>
                        elements in the <i>DbmsToDds</i> and <i>DdsToDbms</i> elements
                        map a Table and Topic circularly. To prevent data-modifications
                        from continuously cascading, modifications made by the
                        DBMSConnect service itself should not trigger new updates
                        in the DBMS.</p>
                        <p>In replication mode, the DBMS-connect service ignores
                        samples that were published by itself. (Currently that means
                        that everything that is published on the same node as the
                        DBMSConnect Service is considered to be of DBMSConnect
                        origin and therefore ignored). That way, replication of
                        changes that were copied from Dbms to DDS back into Dbms
                        is avoided.</p>
                        <p><b>WARNING</b>: This setting does not avoid replication
                        of changes that were copied from DDS to Dbms back into DDS.
                        For that purpose, the <i>replication_user</i> attribute of the
                        <i>DbmsToDds</i> or <i>DbmsToDds/NameSpace</i> elements should
                        be set appropriately as well!</p>
                    ]]></comment>
                    <default>FALSE</default>
                </attributeBoolean>
                <element name="Mapping" minOccurrences="0" maxOccurrences="0">
                    <comment><![CDATA[
                            This element specifies a modification to the way that the service handles
                            a pre-configured set of data within the specified NameSpace. Its attributes
                            are used to configure the responsibilities of the service concerning the
                            bridging of data from DDS to DBMS.
                    ]]></comment>
                    <attributeString name="topic" required="true">
                        <comment><![CDATA[
                            This attribute specifies the name of the topic where the Mapping applies to.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                    <attributeString name="table" required="false">
                        <comment><![CDATA[
                            This attribute specifies an alternative name for the table that
                            must be associated with the topic. By default the table name is
                            equal to the topic name.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                    <attributeString name="query" required="false">
                        <comment><![CDATA[
                            This attribute specifies an SQL query expression. Only DDS data
                            that matches the query will be bridged to the DBMS domain. This
                            is realized by means of a DCPS query condition. The default value
                            is an empty string, representing all available samples of the
                            selected topic.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                    <attributeString name="filter" required="false">
                        <comment><![CDATA[
                            This attribute specifies an SQL content filter. Only DDS data
                            that matches the filter will be bridged to the DBMS domain. This
                            is realized by means of a DCPS ContentFilteredTopic. The default
                            value is an empty string, representing all available samples of
                            the selected topic.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                </element>
            </element>
        </element>

        <element name="DbmsToDds" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                Holds the configuration of the service concerning DBMS to DDS bridging
            ]]></comment>
            <attributeBoolean name="publish_initial_data" required="false">
                <comment><![CDATA[
                    This attribute specifies the default behaviour with respect to publishing
                    initially available data in the DBMS to the DDS for all NameSpace elements
                    in the current DbmsToDds element. If not specified, it defaults to true.
                    The value of this attribute is ignored when the corresponding
                    event_table_policy is set to NONE.
                   ]]></comment>
                <default>true</default>
            </attributeBoolean>
            <attributeEnum name="event_table_policy" required="false">
                <comment><![CDATA[
                    <p>This attribute specifies the default setting of the event table policy for all <i>NameSpace</i> elements in the current <i>DbmsToDds</i> element.</p>
                    <p>An event table (sometimes referred to as ‘change table’ or ‘shadow table’) is a support-table that is slaved to an application-table, adding some status flags that are under the control of a trigger mechanism that responds to creation/modification/ deletion events in the application-table.</p>
                    <p>The following policies are currently supported:</p>
                    <ul>
                    <li><b>FULL</b>: <i>(default)</i> An 'event table' will always be created when the service connects, and will always be deleted when the service disconnects. In this mode, the service will replace the table if it already exists.</li>
                    <li><b>LAZY</b>: An 'event table' will only be created if it is not available when the service connects, and it will not be deleted when the service disconnects.</ul>
                    <li><b>NONE</b>: An 'event table' will neither be created nor deleted by the service. For each specified <i>NameSpace</i>, the service will poll for the existence of a consistent table with a frequency specified in the coresponding <i>update_frequency</i> attribute. It will start using the table as soon as it is available. With this policy set, no initial data will be published regardless of the value of the applicable <i>publish_initial_data</i> attribute.</ul>
                    </ul>
                ]]></comment>
                <value>FULL</value>
                <value>LAZY</value>
                <value>NONE</value>
                <default>FULL</default>
            </attributeEnum>
            <attributeEnum name="trigger_policy" required="false">
                <comment><![CDATA[
                    <p>This attribute specifies the default trigger policy for all <i>NameSpace</i> elements in the current <i>DbmsToDds</i> element.</p>
                    <p>Triggers are used to to update the event table in case of creation/modification/ deletion events on the application-table. </p>
                    <p>The following policies are currently supported:</p>
                    <ul>
                    <li><b>FULL</b>: <i>(default)</i> Triggers will always be created when the service connects, and will always be deleted when the service disconnects. In this mode, the service will replace the triggers if they already exists.</li>
                    <li><b>LAZY</b>: Triggers will only be created if they are not available when the service connects, and will not be deleted when the service disconnects.</ul>
                    <li><b>NONE</b>: Triggers will neither be created nor deleted by the service. This allows you to build your own custom triggering mechanism.</ul>
                    </ul>
                ]]></comment>
                <value>FULL</value>
                <value>LAZY</value>
                <value>NONE</value>
                <default>FULL</default>
            </attributeEnum>
            <attributeString name="replication_user" required="false">
                <comment><![CDATA[
                    <p>This attribute specifies the default replication user for
                    all <i>NameSpace</i> elements in the current <i>DdsToDbms</i>
                    element.</p>
                    <p>When replicating databases through DDS, the <i>NameSpace</i>
                    elements in the <i>DbmsToDds</i> and <i>DdsToDbms</i> elements
                    map a Table and Topic circularly. To prevent data-modifications
                    from continuously cascading, modifications made by the
                    service itself should not trigger new updates in the
                    DBMS nor in the DDS.</p>
                    <p>To distinguish between DBMS updates coming from an
                    application and DBMS updates coming from DDS, an extra
                    database user (the replication user) has to be introduced
                    that differs from the application users. That way,
                    replication of changes that were copied from DDS to Dbms
                    back into DDS is avoided. The replication_user attribute
                    specifies the user name of that replication user. An empty
                    string (default value) indicates that there is no separate
                    replication user.</p>
                    <p><b>WARNING</b>: This setting does not avoid replication
                    of changes that were copied from Dbms to DDS back into Dbms.
                    For that purpose, the <i>replication_mode</i> attribute of
                    the <i>DssToDbms</i> or <i>DssToDbms/NameSpace</i> elements
                    should be set appropriately as well!</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default></default>
            </attributeString>
            <element name="NameSpace" minOccurrences="1" maxOccurrences="0">
                <comment><![CDATA[
                    This element specifies the responsibilities of the service concerning
                    the bridging of data from DBMS to DDS. At least one <i>NameSpace</i>
                    element has to be present in a <i>DbmsToDds</i> element.
                ]]></comment>
                <attributeString name="name" required="false">
                    <comment><![CDATA[
                        The name of the namespace. If not specified, the namespace
                        will be named "(nameless)".
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>(nameless)</default>
                </attributeString>
                <attributeString name="odbc" required="false">
                    <comment><![CDATA[
                        <p>The service dynamically loads an ODBC library at runtime. This attribute
                        specifies the name of the ODBC library to be loaded. Platform specific
                        pre- and postfixes and extensions are automatically added.</p>
                        <p>If this attribute is not provided, the service will attempt to load the
                        generic ODBC library. The resulting behaviour is dependent on the platform
                        on which the DbmsConnect Service is running.</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="partition" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies an expression represents one or more DDS partitions.
                        It is allowed to use wildcards in the expression: a '*' represents any
                        sequence of characters and a '?' represents one single character.</p>
                        <p>This expression is used to specify the DDS partition(s) where DBMS records
                        will be written to as DDS samples by the service.</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>*</default>
                </attributeString>
                <attributeString name="table" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies an expression that represents one or more DBMS
                        table names.  It is allowed to use wildcards in the expression: a '*'
                        represents any sequence of characters and a '?' represents one single
                        character.</p>
                        <p>This expression is used to specify the tables from which DBMS data must
                        be 'bridged' to the DDS domain.</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default>*</default>
                </attributeString>
                <attributeFloat name="update_frequency" required="false">
                    <comment><![CDATA[
                        This attribute specifies the frequency (in Hz) at which
                        the service will update the DDS domain with DBMS data.
                        By default, it is 2.0Hz. Event-based updates are not
                        supported. If 0.0Hz is specified, the default of 2.0Hz
                        will be used.
                    ]]></comment>
                    <minimum>0.0</minimum>
                    <default>2.0</default>
                </attributeFloat>
                <attributeString name="dsn" required="true">
                    <comment><![CDATA[
                        Represents the Data Source Name, that represents the DBMS where
                        the service must bridge the DDS data from.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="usr" required="true">
                    <comment><![CDATA[
                        Represents the user name that is used when connecting to the DBMS.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="pwd" required="true">
                    <comment><![CDATA[
                        Represents the password that is used when connecting to the DBMS.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeBoolean name="publish_initial_data" required="false">
                    <default>true</default>
                    <comment><![CDATA[
                        This attribute specifies the default behaviour with respect to publishing
                        initially available data in the DBMS to the DDS for all <i>Mapping</i>
                        elements in the current <i>NameSpace</i> element. If not specified, the value
                        will be inherited from the <i>publish_initial_data</i> of the parent
                        <i>DbmsToDds</i> element, which defaults to true. The value of this attribute
                        is ignored when the corresponding <i>event_table_policy</i> is set to NONE.
                       ]]></comment>
                </attributeBoolean>
                <attributeBoolean name="force_key_equality" required="false">
                    <default>true</default>
                    <comment><![CDATA[
                        This attribute specifies the default setting for <i>Mapping</i> elements
                        in the current <i>NameSpace</i> element with regard to the enforcement of
                        key equality between table and topic definitions. If true, key definitions
                        from the table and topic must match, otherwise key definitions may differ.
                       ]]></comment>
                </attributeBoolean>
                <attributeEnum name="event_table_policy" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies the default setting of the event table policy for all <i>Mapping</i> elements in the current <i>NameSpace</i> element. If not specified, the value will be inherited from the <i>event_table_policy</i> of the parent <i>DbmsToDds</i> element, which if not explicitly specified defaults to FULL.</p>
                        <p>An event table (sometimes referred to as ‘change table’ or ‘shadow table’) is a support-table that is slaved to an application-table, adding some status flags that are under the control of a trigger mechanism that responds to creation/modification/ deletion events in the application-table.</p>
                        <p>The following policies are currently supported:</p>
                        <ul>
                        <li><b>FULL</b>: An 'event table' will always be created when the service connects, and will always be deleted when the service disconnects. In this mode, the service will replace the table if it already exists.</li>
                        <li><b>LAZY</b>: An 'event table' will only be created if it is not available when the service connects, and it will not be deleted when the service disconnects.</ul>
                        <li><b>NONE</b>: An 'event table' will neither be created nor deleted by the service. For each specified <i>NameSpace</i>, the service will poll for the existence of a consistent table with a frequency specified in the coresponding <i>update_frequency</i> attribute. It will start using the table as soon as it is available. With this policy set, no initial data will be published regardless of the value of the applicable <i>publish_initial_data</i> attribute.</ul>
                        </ul>
                    ]]></comment>
                   <value>FULL</value>
                   <value>LAZY</value>
                   <value>NONE</value>
                   <default>FULL</default>
               </attributeEnum>
               <attributeEnum name="trigger_policy" required="false">
                   <comment><![CDATA[
                        <p>This attribute specifies the default trigger policy for all <i>Mapping</i> elements in the current <i>NameSpace</i> element. If not specified, the value will be inherited from the <i>trigger_policy</i> of the parent <i>DbmsToDds</i> element, which if not explicitly specified defaults to FULL.</p>
                        <p>Triggers are used to to update the event table in case of creation/modification/ deletion events on the application-table.</p>
                        <p>The following policies are currently supported:</p>
                        <ul>
                        <li><b>FULL</b>: <i>(default)</i> Triggers will always be created when the service connects, and will always be deleted when the service disconnects. In this mode, the service will replace the triggers if they already exists.</li>
                        <li><b>LAZY</b>: Triggers will only be created if they are not available when the service connects, and will not be deleted when the service disconnects.</ul>
                        <li><b>NONE</b>: Triggers will neither be created nor deleted by the service. This allows you to build your own custom triggering mechanism.</ul>
                        </ul>
                   ]]></comment>
                   <value>FULL</value>
                   <value>LAZY</value>
                   <value>NONE</value>
                   <default>FULL</default>
               </attributeEnum>
               <attributeString name="schema" required="false">
                    <comment><![CDATA[
                        Represents the schema that is used when communicating with the DBMS.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="catalog" required="false">
                    <comment><![CDATA[
                        Represents the catalog that is used when communicating with the DBMS.
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <attributeString name="replication_user" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies the default replication user for
                        all <i>Mapping</i> elements in the current <i>NameSpace</i>
                        element. If not specified, the value will be inherited from
                        the <i>replication_user</i> of the parent <i>DbmsToDds</i> element,
                        which by default has no separate replication user specified.</p>
                        <p>When replicating databases through DDS, the <i>NameSpace</i>
                        elements in the <i>DbmsToDds</i> and <i>DdsToDbms</i> elements
                        map a Table and Topic circularly. To prevent data-modifications
                        from continuously cascading, modifications made by the
                        service itself should not trigger new updates in the
                        DBMS nor in the DDS.</p>
                        <p>To distinguish between DBMS updates coming from an
                        application and DBMS updates coming from DDS, an extra
                        database user (the replication user) has to be introduced
                        that differs from the application users. That way,
                        replication of changes that were copied from DDS to Dbms
                        back into DDS is avoided. The replication_user attribute
                        specifies the user name of that replication user. An empty
                        string (default value) indicates that there is no separate
                        replication user.</p>
                        <p><b>WARNING</b>: This setting does not avoid replication
                        of changes that were copied from Dbms to DDS back into Dbms.
                        For that purpose, the <i>replication_mode</i> attribute of
                        the <i>DssToDbms</i> or <i>DssToDbms/NameSpace</i> elements
                        should be set appropriately as well!</p>
                    ]]></comment>
                    <maxLength>0</maxLength>
                    <default></default>
                </attributeString>
                <element name="Mapping" minOccurrences="0" maxOccurrences="0">
                    <comment><![CDATA[
                           This element specifies a modification to the way that the service handles
                           a pre-configured set of data within the specified NameSpace. Its attributes
                           are used to configure the responsibilities of the service concerning the
                           bridging of data from DBMS to DDS
                    ]]></comment>
                    <attributeString name="table" required="true">
                        <comment><![CDATA[
                            This attribute specifies the name of the table where the Mapping applies to.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                    <attributeString name="topic" required="false">
                        <comment><![CDATA[
                            This attribute specifies an alternative name for the topic that
                            must be associated with the table. By default the topic name is
                            equal to the table name.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                    <attributeString name="query" required="false">
                        <comment><![CDATA[
                            Optional DBMS query expression. Only DBMS data that matches the
                            query will be bridged to the DDS domain. This is realized by
                            means of a SQL query. The default value is an empty string,
                            representing all available data in the selected table.
                        ]]></comment>
                        <maxLength>0</maxLength>
                        <default></default>
                    </attributeString>
                    <attributeBoolean name="publish_initial_data"
                    required="false">
                    <default>true</default>
                    <comment><![CDATA[
                        This attribute specifies the behaviour with respect to publishing the
                        initially available data specified in the current <i>Mapping</i> element
                        from DBMS to DDS. If not specified, the value will be inherited from
                        the <i>publish_initial_data</i> of the parent <i>NameSpace</i> element,
                        which if not explicitly specified inherits from the <i>publish_initial_data</i>
                        of the parent <i>DbmsToDds</i> element, which defaults to true.
                        The value of this attribute is ignored when the corresponding
                        <i>event_table_policy</i> is set to NONE.
                       ]]></comment>
                </attributeBoolean>
                   <attributeBoolean name="force_key_equality"
                       required="false">
                       <default>true</default>
                       <comment><![CDATA[
                           This attribute specifies the enforcement of key equality between table
                           and topic definitions. If true, key definitions from the table and
                           topic must match, otherwise key definitions may differ. If not specified,
                           the value will be inherited from the <i>force_key_equality</i> of the parent
                           <i>NameSpace</i> element, which if not explicitly specified defaults to true.
                    ]]></comment>
                   </attributeBoolean>
                   <attributeEnum name="event_table_policy" required="false">
                    <comment><![CDATA[
                        <p>This attribute specifies the event table policy in the current <i>Mapping</i> element. If not specified, the value will be inherited from the <i>event_table_policy</i> of the parent <i>NameSpace</i> element, which if not explicitly specified inherits from the <i>event_table_policy</i> of the parent <i>DbmsToDds</i> element, which defaults to FULL.</p>
                        <p>An event table (sometimes referred to as ‘change table’ or ‘shadow table’) is a support-table that is slaved to an application-table, adding some status flags that are under the control of a trigger mechanism that responds to creation/modification/ deletion events in the application-table.</p>
                        <p>The following policies are currently supported:</p>
                        <ul>
                        <li><b>FULL</b>: An 'event table' will always be created when the service connects, and will always be deleted when the service disconnects. In this mode, the service will replace the table if it already exists.</li>
                        <li><b>LAZY</b>: An 'event table' will only be created if it is not available when the service connects, and it will not be deleted when the service disconnects.</ul>
                        <li><b>NONE</b>: An 'event table' will neither be created nor deleted by the service. For the specified table, the service will poll with a frequency specified in the coresponding <i>update_frequency</i> attribute of the parent <i>NameSpace</i>. It will start using the table as soon as it is available. With this policy set, no initial data will be published regardless of the value of the applicable <i>publish_initial_data</i> attribute.</ul>
                        </ul>
                    ]]></comment>
                       <value>FULL</value>
                       <value>LAZY</value>
                       <value>NONE</value>
                       <default>FULL</default>
                   </attributeEnum>
                   <attributeEnum name="trigger_policy" required="false">
                       <comment><![CDATA[
                        <p>This attribute specifies the trigger policy for the current <i>Mapping</i> element. If not specified, the value will be inherited from the <i>trigger_policy</i> of the parent <i>DbmsToDds</i> element, which if not explicitly specified inherits from the <i>trigger_policy</i> of the parent <i>DbmsToDds</i> element, which defaults to FULL.</p>
                        <p>Triggers are used to to update the event table in case of creation/modification/ deletion events on the application-table.</p>
                        <p>The following policies are currently supported:</p>
                        <ul>
                        <li><b>FULL</b>: <i>(default)</i> Triggers will always be created when the service connects, and will always be deleted when the service disconnects. In this mode, the service will replace the triggers if they already exists.</li>
                        <li><b>LAZY</b>: Triggers will only be created if they are not available when the service connects, and will not be deleted when the service disconnects.</ul>
                        <li><b>NONE</b>: Triggers will neither be created nor deleted by the service. This allows you to build your own custom triggering mechanism.</ul>
                        </ul>
                   ]]></comment>
                   <value>FULL</value>
                   <value>LAZY</value>
                   <value>NONE</value>
                   <default>FULL</default>
               </attributeEnum>
                </element>

            </element>

        </element>

        <element name="Tracing" minOccurrences="0" maxOccurrences="1">
            <comment><![CDATA[
                This element controls the amount and type of information that is
                written into the tracing log file by the DbmsConnect Service.
                This is useful to track the DbmsConnect Service during application
                development. In the runtime system it should be turned off.
            ]]></comment>
            <leafString name="OutputFile" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies where the logging is printed to. Note that
                    "stdout" and "stderr" are considered legal values that represent
                    "standard out" and "standard error" respectively. The default
                    value is an empty string, indicating that all tracing is disabled.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>dbmsconnect.log</default>
            </leafString>
            <leafBoolean name="Timestamps" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies whether the logging must contain timestamps.
                ]]></comment>
                <attributeBoolean name="absolute" required="false">
                    <comment><![CDATA[
                        This attribute specifies whether the timestamps are absolute or
                        relative to the startup time of the service.
                    ]]></comment>
                    <default>true</default>
                </attributeBoolean>
                <default>true</default>
            </leafBoolean>
            <leafEnum name="Verbosity" minOccurrences="0" maxOccurrences="1">
                <comment><![CDATA[
                    This element specifies the verbosity level of the logging.
                ]]></comment>
                <value>SEVERE</value>
                <value>WARNING</value>
                <value>INFO</value>
                <value>CONFIG</value>
                <value>FINE</value>
                <value>FINER</value>
                <value>FINEST</value>
                <default>INFO</default>
            </leafEnum>
        </element>
    </element>

    <element name="UserClockService" minOccurrences="0" maxOccurrences="1">
        <comment><![CDATA[
            The UserClock Service allows you to plug in a custom clock library, allowing
            OpenSplice to read the time from an external clock source. It expects a root
            element named <i>OpenSplice/UserClockService</i>. Within this root element,
            the userclock will look for several child-elements. Each of these is listed
            and explained.
        ]]></comment>
        <attributeString name="name" required="true">
            <comment><![CDATA[
                This attribute identifies the configuration for the UserClock Service.
                The value of the <i>name</i> attribute must match the one specified under the
                <i>OpenSplice/Domain/Service[@name]</i> in the configuration of the
                Domain Service.
            ]]></comment>
            <default>userclock</default>
            <maxLength>0</maxLength>
        </attributeString>
        <leafString name="UserClockModule" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the User Clock Service library file. On UNIX
                like and Windows platforms this will be a shared library. On VxWorks
                this will be a reallocatable object file. On VxWorks this tag may
                be empty or discarded if the functions are pre-loaded on the target.
            ]]></comment>
            <default/>
            <maxLength>0</maxLength>
        </leafString>
        <element name="UserClockStart" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies if the user clock requires a start function to
                be called  when the process first creates a participant.
            ]]></comment>
            <attributeString name="name" required="true">
                <comment><![CDATA[
                    This attribute specifies the name of the start function.
                    This start function should not have any parameters, and needs
                    to return an int that represents 0 if there are no problems,
                    and any other value if a problem is encountered.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>clockStart</default>
            </attributeString>
        </element>
        <element name="UserClockStop" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies if the user clock requires a stop function to
                be called when the process deletes the last participant.
            ]]></comment>
            <attributeString name="name" required="true">
                <comment><![CDATA[
                    This attribute specifies the name of the stop function. This stop
                    function should not have any parameters, and needs to return an
                    int that represents 0 if there are no problems, and any other
                    value if a problem is encountered.
                ]]></comment>
                <maxLength>0</maxLength>
                <default>clockStop</default>
            </attributeString>
        </element>
        <element name="UserClockQuery" minOccurrences="1" maxOccurrences="1">
            <comment><![CDATA[
                This element specifies the clock query function.
            ]]></comment>
            <attributeString name="name" required="true">
                <comment><![CDATA[
                    <p>This attribute specifies the name of the function that gets the
                    current time. This <i>clockGet</i> function should not have any parameters,
                    and needs to return the current time as an <i>os_time</i> type.</p>
                    <p>The definition of the <i>os_time</i> type can be found in <i>os_time.h</i>.</p>
                ]]></comment>
                <maxLength>0</maxLength>
                <default>clockGet</default>
            </attributeString>
        </element>
    </element>
</splice_meta_config>
