<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">

<!--
    run_test.xml - Run the Hello world test using STAX

    Job Description:
    This job runs the hello world example using STAX.
-->

<stax>

  <defaultcall function="HelloMain">
  </defaultcall>

  <function name="HelloMain" scope="local" >
    <function-prolog>
      Test runs OSPL on two nodes. A publisher is then started on one node.
      A subscriber is started on the other. The publisher publishes a sample.
      The subscriber reads it.

      If the sample is successfully read the test succeeds.
      Fails otherwise.
    </function-prolog>

    <function-no-args/>
    <sequence>
        <!-- Always call initialise first -->
        <import file="'../stax/test_ospl.xml'"/>
        <call function="'Initialise'" />

        <script>
            test_run = TestRun.the_test_run_
            # The test scenario name should be the test directory name. So you should edit this.
            test_name = 'hello'
            test_scenario = test_run.create_test_scenario(test_name)
            test_node1 = test_scenario.get_next_node()
            test_node2 = test_scenario.get_next_node()
            process1 = test_scenario.define_process(test_node1)
            process2 = test_scenario.define_process(test_node2)

            process1.set_command("ccpp_hello_pub")
            process2.set_command("ccpp_hello_sub")

            test_result1 = -1
            test_result2 = -1

            import time
            starttime = time.time(); # record starting time
        </script>
        <testcase name = "test_scenario.get_name()" >
          <sequence>
            <try>
                <sequence>

                    <call function="'StartOSPL'">[ test_node1, test_scenario ]</call>
                    <call function="'StartOSPL'">[ test_node2, test_scenario ]</call>

                    <call function="'SpawnProcess'">[ process1 ]</call>

                    <call function="'RunProcess'">process2</call>
                    <script>test_result2 = STAXResult</script>

                 </sequence>
                 <finally>
                    <parallel>
                        <sequence>
                            <call function="'CheckProcessComplete'">process1</call>
                            <script>test_result1 = STAXResult</script>
                            <call function="'PASS-if-0'">test_result1</call>
                        </sequence>

                        <call function="'RetrieveProcessLog'">process1</call>
                        <call function="'RetrieveProcessLog'">process2</call>
                        <call function="'PASS-if-0'">test_result2</call>
                        <call function="'StopOSPL'">[ test_node1, test_scenario ]</call>
                        <call function="'StopOSPL'">[ test_node2, test_scenario ]</call>
                     </parallel>
                 </finally>
             </try>

            <script>
              stoptime = time.time()
              elapsedSecs = stoptime - starttime
            </script>

            <message>'Test complete - ran for %d seconds' % elapsedSecs</message>
          </sequence>
        </testcase>
    </sequence>
  </function>

  <function name="HelloManual">
    <function-prolog>
      The manual entry point for this test. Allows you to run this test from the console
      by specifying init values.
    </function-prolog>
    <function-list-args>
      <function-required-arg name="host_name1">
        The host name of the first machine you wish test on
      </function-required-arg>
      <function-required-arg name="test_root1">
        Location of test case / source / build checkout on machine 1
      </function-required-arg>
      <function-required-arg name="ospl_home1">
        Location of test case / source / build checkout on machine 1
      </function-required-arg>
      <function-required-arg name="host_name2">
        The host name of the second machine you wish to test on
      </function-required-arg>
      <function-required-arg name="test_root2">
        Location of test case / source / build checkout on machine 1
      </function-required-arg>
      <function-required-arg name="ospl_home2">
        Location of test case / source / build checkout on machine 1
      </function-required-arg>
    </function-list-args>
    <sequence>
      <import file="'../stax/test_ospl.xml'"/>
      <call function="'Initialise'" />
      <script>
        test_node1 = TestNode(host_name1, test_root1, ospl_home1)
        test_node2 = TestNode(host_name2, test_root2, ospl_home2)
        TestRun.the_test_run_ = TestRun( [test_node1, test_node2] )
      </script>
      <call function="'InitialiseNode'">test_node1</call>
      <call function="'InitialiseNode'">test_node2</call>
      <call function="'HelloMain'" />
    </sequence>
  </function>
</stax>
